# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Pierre Schmitz <pierre@archlinux.de>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Daniel J Griffiths <ghost1227@archlinux.us>

pkgname=chromium
pkgver=126.0.6478.126
pkgrel=1.1
_launcher_ver=8
_manual_clone=0
_system_clang=1
pkgdesc="A web browser built for speed, simplicity, and security"
arch=(x86_64 powerpc64le riscv64)
url="https://www.chromium.org/Home"
license=('BSD-3-Clause')
depends=('gtk3' 'nss' 'alsa-lib' 'xdg-utils' 'libxss' 'libcups' 'libgcrypt'
         'ttf-liberation' 'systemd' 'dbus' 'libdrm' 'libpulse' 'openh264'  'pciutils' 'libva'
         'libffi' 'desktop-file-utils' 'hicolor-icon-theme' 'brotli' 'icu'
         'webrtc-audio-processing' 'jsoncpp' 'openjpeg2' 'libxslt' 'dav1d' 'woff2'
         'highway' 'snappy' 'minizip')
makedepends=('python' 'gn' 'ninja' 'clang' 'lld' 'gperf' 'nodejs-lts-iron' 'npm' 'pipewire'
             'rust' 'qt5-base' 'qt6-base' 'java-runtime-headless' 'git' 'quilt' 'rollup'
             'libxnvctrl' 'elfutils')
optdepends=('pipewire: WebRTC desktop sharing under Wayland'
            'kdialog: support for native dialogs in Plasma'
            'gtk4: for --gtk-version=4 (GTK4 IME might work better on Wayland)'
            'org.freedesktop.secrets: password storage backend on GNOME / Xfce'
            'kwallet: support for storing passwords in KWallet on Plasma')
options=('!debug' '!lto') # Chromium adds its own flags for ThinLTO
debian_chromium_version="126.0.6478.126-1~deb12u1"
source=(http://ftp.de.debian.org/debian/pool/main/c/chromium/chromium_${pkgver}.orig.tar.xz
        https://github.com/foutrelis/chromium-launcher/archive/v$_launcher_ver/chromium-launcher-$_launcher_ver.tar.gz
        allow-ANGLEImplementation-kVulkan.patch
        compiler-rt-adjust-paths.patch
        use-oauth2-client-switches-as-default.patch
        libpng-pdfium-compile-98.patch
        fix-swiftshader-compile.patch
        fix-breakpad-compile.patch
        chromium-117-material-color-include.patch
        http://ftp.de.debian.org/debian/pool/main/c/chromium/chromium_${debian_chromium_version}.debian.tar.xz
        https://repo.archlinuxpower.org/distfiles/chromium/chromium-126.0.6478.126-tflite_support.tar.zst
        chromium.desktop
        chromium.appdata.xml
        riscv-fix-rust-target.patch::https://github.com/riscv-forks/electron/raw/v31.0.1-riscv/patches/chromium/0005-Fix-Rust-target-triple-for-riscv64.patch
        riscv-v8-fix-perf-regression.patch
        riscv-sandbox.patch
        riscv-ffmpeg.patch
        riscv-dav1d.patch)
sha256sums=('aa828cedf44c81e21282393b8436d9c75bb20f6427476d614649b0813bf5ee16'
            '213e50f48b67feb4441078d50b0fd431df34323be15be97c55302d3fdac4483a'
            '8f81059d79040ec598b5fb077808ec69d26d6c9cbebf9c4f4ea48b388a2596c5'
            'b3de01b7df227478687d7517f61a777450dca765756002c80c4915f271e2d961'
            'a9b417b96daec33c9059065e15b3a92ae1bf4b59f89d353659b335d9e0379db6'
            '5569c938623f45008743cd2790e3895ae1fda75efbae13653500a4302dc562ba'
            'cb3a1051898ab7dea02bfccbed6b6aa8d9feb342da47eefcf567e8f1aa016289'
            '33ec8c74d34d7b568cd9f1b35ad316846c75a34cfcba301b95684cd934f33ad3'
            'c94785e3258be7ebdb50fdc40044cf65a91fdb11772eabe7a58e260757453cae'
            '9a9aae6d8371d22fcc0497db8dfd4fe8414d2f331a37e68c8b08517e7b3d4bfc'
            'df0c99c269c26061410079e13e0015d2e86f64f34088e0beaf294f3bc24d69d9'
            '6e49854d9fa380f6f39b8bed43ef643a188f6f37c4fdbdb1a9eb938882cba8de'
            'a3293e043ead274762f8afc443d297ce65429c76d9a8c68c101d3dea77781360'
            '9248bb9d12487fd763bc45524c5fc676580660a320a50436d200ab93afc844bd'
            'e03f824676649821de5c3362264b8f7028e8d6c3cc4ad3d6e9da531c398c2dd7'
            '1713cfc3c73d7f33fd7a9daba9b642869632468bc1068b727827a6b5320a7f88'
            '64333a3c3f5230d58066c2ca1daacccab311066485cd905d1c387b1bc2ba3dbf'
            '5689e9422624c8725509b6fdc277e20c3e8862cf515656faef7507978489bc4e')

prepare() {
  cd chromium-$pkgver

  # Use the --oauth2-client-id= and --oauth2-client-secret= switches for
  # setting GOOGLE_DEFAULT_CLIENT_ID and GOOGLE_DEFAULT_CLIENT_SECRET at
  # runtime -- this allows signing into Chromium without baked-in values
  patch -Np1 -i ../use-oauth2-client-switches-as-default.patch

  # Upstream fixes
  patch -Np1 -i ../allow-ANGLEImplementation-kVulkan.patch

  # Allow libclang_rt.builtins from compiler-rt >= 16 to be used
  patch -Np1 -i ../compiler-rt-adjust-paths.patch

  # Fixes for building with libstdc++ instead of libc++
  patch -Np1 -i ../chromium-117-material-color-include.patch

  case "${CARCH}" in
    powerpc64le) 
      sed 's@^bookworm/libxml-parseerr.patch@@g' \
          -i ../debian/patches/series
      sed 's@^system/rollup.patch.*@@g' \
          -i ../debian/patches/series
      sed 's@^debianization.*@@g' \
          -i ../debian/patches/series
      sed 's@^debian/patches/system/rollup.patch@@g' \
          -i ../debian/patches/series
      # 1-2-3 go
      export QUILT_PATCHES=../debian/patches
      quilt push -a
    ;;
    riscv64)
      for rvpatch in riscv-{dav1d,fix-rust-target}.patch; do
        patch -Np1 -i ../$rvpatch
      done
      patch -Np1 -d v8 < ../riscv-v8-fix-perf-regression.patch
      patch -Np1 -d third_party/ffmpeg < ../riscv-ffmpeg.patch
    ;;
  esac

  cp -ra /usr/lib/node_modules/rollup third_party/node/node_modules/

  ../debian/scripts/unbundle

  cp -r ${srcdir}/tflite_support third_party/

  # Link to system tools required by the build
  mkdir -p third_party/node/linux/node-linux-x64/bin
  ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/
  ln -s /usr/bin/java third_party/jdk/current/bin/
}

build() {
  make -C chromium-launcher-$_launcher_ver

  cd chromium-$pkgver

  export CC=clang
  export CXX=clang++
  export AR=ar
  export NM=nm

  local _flags=(
    'clang_use_chrome_plugins=false'
    'host_toolchain="//build/toolchain/linux/unbundle:default"'
    'custom_toolchain="//build/toolchain/linux/unbundle:default"'
    'is_debug=false'
    'use_goma=false'
    'use_sysroot=false'
    'use_libjpeg_turbo=true'
    'use_custom_libcxx=false'
    'use_unofficial_version_number=false'
    'enable_vr=false'
    'enable_nacl=false'
    'enable_swiftshader=false'
    'dawn_use_swiftshader=false'
    'build_dawn_tests=false'
    'enable_reading_list=false'
    'enable_iterator_debugging=false'
    'enable_hangout_services_extension=false'
    'angle_has_histograms=false'
    'angle_build_tests=false'
    'build_angle_perftests=false'
    'treat_warnings_as_errors=false'
    'use_qt6=true'
    'moc_qt6_path="/usr/lib/qt6"'
    'is_cfi=false'
    'use_thin_lto=false'
    'chrome_pgo_phase=0'
    'use_gio=true'
    'is_official_build=true'
    'symbol_level=0'
    'use_pulseaudio=true'
    'link_pulseaudio=true'
    'rtc_use_pipewire=true'
    'icu_use_data_file=false'
    'enable_widevine=true'
    'v8_enable_backtrace=true'
    'use_system_zlib=true'
    'use_system_lcms2=true'
    'use_system_libjpeg=true'
    'use_system_libpng=true'
    'use_system_freetype=true'
    'use_system_harfbuzz=true'
    'use_system_libopenjpeg2=true'
    'concurrent_links=1'
    'proprietary_codecs=true'
    'ffmpeg_branding="Chrome"'
    'disable_fieldtrial_testing_config=true'
    'safe_browsing_mode=1'
    'build_with_tflite_lib=true'
    'host_cpu="ppc64"'
    'use_v4l2_codec=false'
    'use_vaapi=true'
    'use_system_libdrm=true'
    'use_system_libffi=true'
    'enable_reporting=false'
  )

  local _clang_version=$(
    clang --version | grep -m1 version | sed 's/.* \([0-9]\+\).*/\1/')

  _flags+=(
    'clang_base_path="/usr"'
    'clang_use_chrome_plugins=false'
    "clang_version=\"$_clang_version\""
    'chrome_pgo_phase=0' # needs newer clang to read the bundled PGO profile
  )

  # Allow the use of nightly features with stable Rust compiler
  # https://github.com/ungoogled-software/ungoogled-chromium/pull/2696#issuecomment-1918173198
  export RUSTC_BOOTSTRAP=1

  _flags+=(
    'rust_sysroot_absolute="/usr"'
    "rustc_version=\"$(rustc --version)\""
  )

  # Facilitate deterministic builds (taken from build/config/compiler/BUILD.gn)
  CFLAGS+='   -Wno-builtin-macro-redefined'
  CXXFLAGS+=' -Wno-builtin-macro-redefined'
  CPPFLAGS+=' -D__DATE__=  -D__TIME__=  -D__TIMESTAMP__='

  # Do not warn about unknown warning options
  CFLAGS+='   -Wno-unknown-warning-option'
  CXXFLAGS+=' -Wno-unknown-warning-option'

  # Let Chromium set its own symbol level
  CFLAGS=${CFLAGS/-g }
  CXXFLAGS=${CXXFLAGS/-g }

  # https://github.com/ungoogled-software/ungoogled-chromium-archlinux/issues/123
  CFLAGS=${CFLAGS/-fexceptions}
  CFLAGS=${CFLAGS/-fcf-protection}
  CXXFLAGS=${CXXFLAGS/-fexceptions}
  CXXFLAGS=${CXXFLAGS/-fcf-protection}

  # This appears to cause random segfaults when combined with ThinLTO
  # https://bugs.archlinux.org/task/73518
  CFLAGS=${CFLAGS/-fstack-clash-protection}
  CXXFLAGS=${CXXFLAGS/-fstack-clash-protection}

  # https://crbug.com/957519#c122
  CXXFLAGS=${CXXFLAGS/-Wp,-D_GLIBCXX_ASSERTIONS}

  echo GN
  gn gen out/Release --args="${_flags[*]}"
  echo NINJA
  ninja -C out/Release chrome chrome_sandbox chromedriver
}

package() {
  cd chromium-launcher-$_launcher_ver
  make PREFIX=/usr DESTDIR="$pkgdir" install
  install -Dm644 LICENSE \
    "$pkgdir/usr/share/licenses/chromium/LICENSE.launcher"

  cd ../chromium-$pkgver

  install -D out/Release/chrome "$pkgdir/usr/lib/chromium/chromium"
  install -D out/Release/chromedriver "$pkgdir/usr/bin/chromedriver"
  install -Dm4755 out/Release/chrome_sandbox "$pkgdir/usr/lib/chromium/chrome-sandbox"

  install -Dm644 ${srcdir}/chromium.desktop \
    "$pkgdir/usr/share/applications/chromium.desktop"
  install -Dm644 chrome/app/resources/manpage.1.in \
    "$pkgdir/usr/share/man/man1/chromium.1"
  sed -i \
    -e 's/@@MENUNAME@@/Chromium/g' \
    -e 's/@@PACKAGE@@/chromium/g' \
    -e 's/@@USR_BIN_SYMLINK_NAME@@/chromium/g' \
    "$pkgdir/usr/share/applications/chromium.desktop" \
    "$pkgdir/usr/share/man/man1/chromium.1"

  install -Dm644 ${srcdir}/chromium.appdata.xml \
    "$pkgdir/usr/share/metainfo/chromium.appdata.xml"
  sed -ni \
    -e 's/chromium-browser\.desktop/chromium.desktop/' \
    -e '/<update_contact>/d' \
    -e '/<p>/N;/<p>\n.*\(We invite\|Chromium supports Vorbis\)/,/<\/p>/d' \
    -e '/^<?xml/,$p' \
    "$pkgdir/usr/share/metainfo/chromium.appdata.xml"

  local toplevel_files=(
    chrome_100_percent.pak
    chrome_200_percent.pak
    chrome_crashpad_handler
    libqt5_shim.so
    libqt6_shim.so
    resources.pak
    v8_context_snapshot.bin

    # ANGLE
    libEGL.so
    libGLESv2.so

    # SwiftShader ICD
    libvulkan.so.1
  )

  case "${CARCH}" in
    x86_64)
      toplevel_files+=(
        libvk_swiftshader.so
        vk_swiftshader_icd.json
      )
    ;;
  esac

  cp "${toplevel_files[@]/#/out/Release/}" "$pkgdir/usr/lib/chromium/"
  install -Dm644 -t "$pkgdir/usr/lib/chromium/locales" out/Release/locales/*.pak

  for size in 24 48 64 128 256; do
    install -Dm644 "chrome/app/theme/chromium/product_logo_$size.png" \
      "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
  done

  for size in 16 32; do
    install -Dm644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" \
      "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
  done

  install -Dm644 LICENSE "$pkgdir/usr/share/licenses/chromium/LICENSE"
}

# vim:set ts=2 sw=2 et:

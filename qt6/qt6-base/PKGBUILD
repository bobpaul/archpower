# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer: Antonio Rojas <arojas@archlinux.org>
# Maintainer: Felix Yan <felixonmars@archlinux.org>
# Contributor: Andrea Scarpino <andrea@archlinux.org>

pkgname=qt6-base
_qtver=6.6.2
pkgver=${_qtver/-/}
pkgrel=1
arch=(x86_64 powerpc64le powerpc64 powerpc riscv64)
url='https://www.qt.io'
license=(GPL3 LGPL3 FDL custom)
pkgdesc='A cross-platform application and UI framework'
depends=(brotli
         dbus
         double-conversion
         fontconfig
         freetype2
         gcc-libs
         glib2
         glibc
         harfbuzz
         icu
         krb5
         libcups
         libdrm
         libgl
         libice
         libinput
         libjpeg-turbo
         libpng
         libproxy
         libsm
         libx11
         libxcb
         libxkbcommon
         libxkbcommon-x11
         md4c
         mesa
         mtdev
         openssl
         pcre2
         shared-mime-info
         sqlite
         systemd-libs
         tslib
         vulkan-headers
         xcb-util-cursor
         xcb-util-image
         xcb-util-keysyms
         xcb-util-renderutil
         xcb-util-wm
         xdg-utils
         zlib
         zstd)
depends_x86_64=(libb2)
makedepends=(alsa-lib
             cmake
             cups
             freetds
             gst-plugins-base-libs
             gtk3
             libpulse
             mariadb-libs
             ninja
             postgresql
             unixodbc
             xmlstarlet)
makedepends_x86_64=(libfbclient)
optdepends=('freetds: MS SQL driver'
            'gdk-pixbuf2: GTK platform plugin'
            'gtk3: GTK platform plugin'
            'mariadb-libs: MariaDB driver'
            'pango: GTK platform plugin'
            'perl: for syncqt'
            'postgresql-libs: PostgreSQL driver'
            'qt6-wayland: to run Qt6 applications in a Wayland session'
            'unixodbc: ODBC driver')
optdepends_x86_64=(
            'libfbclient: Firebird/iBase driver'
)
groups=(qt6)
options=(debug)
_pkgfn=${pkgname/6-/}-everywhere-src-$_qtver
source=(https://download.qt.io/official_releases/qt/${pkgver%.*}/$_qtver/submodules/$_pkgfn.tar.xz
        qt6-base-cflags.patch
        qt6-base-nostrip.patch
        qtbase-6.6.1-forkfd-childstack-size.patch
        qtbase-6.5.2-no-symlink-check.patch
        qtbase-6.5.2-no-glx.patch
        qtbase-6.5.2-hppa-forkfd-grow-stack.patch)
sha256sums=('b89b426b9852a17d3e96230ab0871346574d635c7914480a2a27f98ff942677b'
            '5411edbe215c24b30448fac69bd0ba7c882f545e8cf05027b2b6e2227abc5e78'
            '4b93f6a79039e676a56f9d6990a324a64a36f143916065973ded89adc621e094'
            '75e15d68296b94ee14fd4057c2515263b2ca586ab2e7294730aa7dedce96447d'
            'f645694fa0974fcca1a9e70d33c24a6be1dd40242fbcc6bae4fc7444d5cebe1e'
            '27bf163c4d686f7a7b8d8c04bfed85dd8f537589b6d5e544840243241ffd01cf'
            'ec3fbbc1d80a80480ccede735dc09fee03c42c3eba6568a7ef6beebee92ca3bc')

prepare() {
  patch -d $_pkgfn -p1 < qt6-base-cflags.patch # Use system CFLAGS
  patch -d $_pkgfn -p1 < qt6-base-nostrip.patch # Don't strip binaries with qmake

  patch -d $_pkgfn -p1 < qtbase-6.6.1-forkfd-childstack-size.patch
  patch -d $_pkgfn -p1 < qtbase-6.5.2-no-symlink-check.patch
  patch -d $_pkgfn -p1 < qtbase-6.5.2-no-glx.patch
  patch -d $_pkgfn -p1 < qtbase-6.5.2-hppa-forkfd-grow-stack.patch
}

build() {
  case "${CARCH}" in
    powerpc) _cmake_options=(-DCMAKE_CXX_FLAGS="-latomic" -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF) ;;
    powerpc64|powerpc64le) _cmake_options=(-DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON) ;;
    riscv64) _cmake_options=(-DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON -DFEATURE_reduce_relocations=OFF) ;;
    x86_64) _cmake_options=(-DFEATURE_no_direct_extern_access=ON -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON -DFEATURE_no_direct_extern_access=ON) ;;
  esac

  cmake -B build -S $_pkgfn -G Ninja \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    -DINSTALL_BINDIR=lib/qt6/bin \
    -DINSTALL_PUBLICBINDIR=usr/bin \
    -DINSTALL_LIBEXECDIR=lib/qt6 \
    -DINSTALL_DOCDIR=share/doc/qt6 \
    -DINSTALL_ARCHDATADIR=lib/qt6 \
    -DINSTALL_DATADIR=share/qt6 \
    -DINSTALL_INCLUDEDIR=include/qt6 \
    -DINSTALL_MKSPECSDIR=lib/qt6/mkspecs \
    -DINSTALL_EXAMPLESDIR=share/doc/qt6/examples \
    -DFEATURE_journald=ON \
    -DFEATURE_libproxy=ON \
    -DFEATURE_openssl_linked=ON \
    -DFEATURE_system_sqlite=ON \
    -DFEATURE_system_xcb_xinput=ON \
    -DCMAKE_MESSAGE_LOG_LEVEL=STATUS ${_cmake_options[@]}
  cmake --build build
}

package() {
  depends+=(qt6-translations)
  DESTDIR="$pkgdir" cmake --install build

  install -Dm644 $_pkgfn/LICENSES/* -t "$pkgdir"/usr/share/licenses/$pkgbase

# Install symlinks for user-facing tools
  cd "$pkgdir"
  mkdir usr/bin
  while read _line; do
    ln -s $_line
  done < "$srcdir"/build/user_facing_tool_links.txt
}

--- a/layout/style/ServoBindings.toml	2024-02-05 19:08:14.000000000 +0100
+++ b/layout/style/ServoBindings.toml	2024-03-22 05:05:13.000000000 +0100
@@ -365,6 +365,9 @@ opaque-types = [
     "std::namespace::atomic___base", "std::atomic__My_base",
     "std::atomic",
     "std::atomic___base",
+    "std::tuple.*", # Causes "Cannot find type _Pred in this scope" error on mac, like rust-skia#571
+    "std::.*::tuple.*",
+
     # We want everything but FontVariation and Float to be opaque but we don't
     # have negative regexes.
     "mozilla::gfx::(.{0,4}|.{6,12}|.{14,}|([^F][^o][^n][^t][^V][^a][^r][^i][^a][^t][^i][^o][^n])|([^F][^l][^o][^a][^t]))",
@@ -390,8 +393,6 @@ opaque-types = [
                             # for clang.
     "mozilla::SeenPtrs",
     "mozilla::SupportsWeakPtr",
-    "std::tuple",
-    "std::tuple_.*", # Causes "Cannot find type _Pred in this scope" error on mac, like rust-skia#571
     "SupportsWeakPtr",
     "mozilla::detail::WeakReference",
     "mozilla::WeakPtr",
--- a/build/moz.configure/toolchain.configure	2024-03-16 22:53:15.409390707 +0000
+++ b/build/moz.configure/toolchain.configure	2024-03-16 22:57:02.661805132 +0000
@@ -2157,10 +2157,10 @@
 set_define("_LIBCPP_HIDE_FROM_ABI", libcxx_override_visibility.hide_from_abi)
 
 
-@depends(target, build_environment)
-def visibility_flags(target, env):
+@depends(target, build_environment, c_compiler)
+def visibility_flags(target, env, c_compiler):
     if target.os != "WINNT":
-        if target.kernel == "Darwin":
+        if target.kernel == "Darwin" or (c_compiler.type == "clang" and c_compiler.version >= "17.0.0"):
             return ("-fvisibility=hidden", "-fvisibility-inlines-hidden")
         return (
             "-I%s/system_wrappers" % os.path.join(env.dist),



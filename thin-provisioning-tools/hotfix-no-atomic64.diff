# --- T2-COPYRIGHT-NOTE-BEGIN ---
# T2 SDE: package/*/thin-provisioning-tools/hotfix-no-atomic64.diff
# Copyright (C) 2023 The T2 SDE Project
# 
# This Copyright note is generated by scripts/Create-CopyPatch,
# more information can be found in the files COPYING and README.
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License version 2 as used by the T2 SDE.
# --- T2-COPYRIGHT-NOTE-END ---

--- thin-provisioning-tools-1.0.4/src/cache/writeback.rs.vanilla	2023-04-26 15:33:18.155369662 +0200
+++ thin-provisioning-tools-1.0.4/src/cache/writeback.rs	2023-04-26 15:33:33.940369670 +0200
@@ -3,7 +3,7 @@
 use std::fs::File;
 use std::io::Cursor;
 use std::path::Path;
-use std::sync::atomic::{AtomicU64, Ordering};
+use std::sync::atomic::{AtomicU32, Ordering};
 use std::sync::mpsc::{self, SyncSender};
 use std::sync::{Arc, Mutex};
 use std::thread;
@@ -169,14 +169,14 @@
 //---------------
 
 struct MappingCounter<F: Fn(&Mapping) -> bool> {
-    count: AtomicU64,
+    count: AtomicU32,
     predicate: F,
 }
 
 impl<F: Fn(&Mapping) -> bool> MappingCounter<F> {
     fn new(predicate: F) -> Self {
         Self {
-            count: AtomicU64::default(),
+            count: AtomicU32::default(),
             predicate,
         }
     }

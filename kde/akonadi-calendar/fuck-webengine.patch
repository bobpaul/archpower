diff -ruN akonadi-calendar-23.08.4.orig/autotests/CMakeLists.txt akonadi-calendar-23.08.4/autotests/CMakeLists.txt
--- akonadi-calendar-23.08.4.orig/autotests/CMakeLists.txt	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/CMakeLists.txt	2023-11-22 20:09:11.892760241 +0100
@@ -6,8 +6,7 @@
 
 find_package(Qt${QT_MAJOR_VERSION}Test ${QT_REQUIRED_VERSION} CONFIG REQUIRED)
 
-add_subdirectory(gnupg_home)
-include(${CMAKE_SOURCE_DIR}/cmake/modules/kdepim_add_gpg_crypto_test.cmake)
+
 
 set( KDEPIMLIBS_RUN_ISOLATED_TESTS TRUE )
 
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/CMakeLists.txt akonadi-calendar-23.08.4/autotests/gnupg_home/CMakeLists.txt
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/CMakeLists.txt	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-configure_file( gpg-agent.conf.in
-  "${CMAKE_CURRENT_BINARY_DIR}/gpg-agent.conf" @ONLY )
-
-configure_file( gpgsm.conf.in
-  "${CMAKE_CURRENT_BINARY_DIR}/gpgsm.conf" @ONLY )
-
-file( COPY
-  ${CMAKE_CURRENT_SOURCE_DIR}
-  DESTINATION "${CMAKE_CURRENT_BINARY_DIR}/../"
-)
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/dirmngr-cache.d/DIR.txt akonadi-calendar-23.08.4/autotests/gnupg_home/dirmngr-cache.d/DIR.txt
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/dirmngr-cache.d/DIR.txt	2023-11-22 20:09:08.605106479 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/dirmngr-cache.d/DIR.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-v:1:
-c:4E31CEB57DDD4A7B9991AB05507B1ED4293FF952:CN=Test-ZS 7,O=Intevation GmbH,C=DE:ldap%3A//ca.intevation.org/cn=Test-ZS 7, o=Intevation GmbH, c=DE?certificateRevocationList:20100615T181523:20100707T181523:72FEF3FD88455A1D4C6796A6499D4422::::
-c:7F2A402CBB016A9146D613568C89D3596A4111AA:CN=Wurzel ZS 3,O=Intevation GmbH,C=DE:ldap%3A//ca.intevation.org/cn=Wurzel ZS 3, o=Intevation GmbH, c=DE?certificateRevocationList:20100625T102134:20100814T102134:44E60EEC02EF2FBF7A5C77E9BD565667::::
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/dirmngr.conf akonadi-calendar-23.08.4/autotests/gnupg_home/dirmngr.conf
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/dirmngr.conf	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/dirmngr.conf	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-
-###+++--- GPGConf ---+++###
-debug-level basic
-log-file socket:///home/leo/kde/src/kdepim/messagecomposer/tests/gnupg_home/log-socket
-###+++--- GPGConf ---+++### Tue 29 Jun 2010 10:23:13 AM EDT
-# GPGConf edited this configuration file.
-# It will disable options before this marked block, but it will
-# never change anything below these lines.
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/gpg-agent.conf.in akonadi-calendar-23.08.4/autotests/gnupg_home/gpg-agent.conf.in
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/gpg-agent.conf.in	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/gpg-agent.conf.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-pinentry-program @CMAKE_CURRENT_BINARY_DIR@/pinentry-fake.sh
-###+++--- GPGConf ---+++###
-allow-mark-trusted
-debug-level basic
-faked-system-time 20130110T154812
-log-file @CMAKE_CURRENT_BINARY_DIR@/gpg-agent.log
-###+++--- GPGConf ---+++### Tue 29 Jun 2010 10:23:13 AM EDT
-# GPGConf edited this configuration file.
-# It will disable options before this marked block, but it will
-# never change anything below these lines.
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/gpg.conf akonadi-calendar-23.08.4/autotests/gnupg_home/gpg.conf
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/gpg.conf	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/gpg.conf	1970-01-01 01:00:00.000000000 +0100
@@ -1,244 +0,0 @@
-# Options for GnuPG
-# Copyright 1998, 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.
-# 
-# This file is free software; as a special exception the author gives
-# unlimited permission to copy and/or distribute it, with or without
-# modifications, as long as this notice is preserved.
-# 
-# This file is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY, to the extent permitted by law; without even the
-# implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-#
-# Unless you specify which option file to use (with the command line
-# option "--options filename"), GnuPG uses the file ~/.gnupg/gpg.conf
-# by default.
-#
-# An options file can contain any long options which are available in
-# GnuPG. If the first non white space character of a line is a '#',
-# this line is ignored.  Empty lines are also ignored.
-#
-# See the man page for a list of options.
-
-# Uncomment the following option to get rid of the copyright notice
-
-#no-greeting
-
-# If you have more than 1 secret key in your keyring, you may want to
-# uncomment the following option and set your preferred keyid.
-
-#default-key 621CC013
-
-# If you do not pass a recipient to gpg, it will ask for one.  Using
-# this option you can encrypt to a default key.  Key validation will
-# not be done in this case.  The second form uses the default key as
-# default recipient.
-
-#default-recipient some-user-id
-#default-recipient-self
-
-# Use --encrypt-to to add the specified key as a recipient to all
-# messages.  This is useful, for example, when sending mail through a
-# mail client that does not automatically encrypt mail to your key.
-# In the example, this option allows you to read your local copy of
-# encrypted mail that you've sent to others.
-
-#encrypt-to some-key-id
-
-# By default GnuPG creates version 3 signatures for data files.  This
-# is not strictly OpenPGP compliant but PGP 6 and most versions of PGP
-# 7 require them.  To disable this behavior, you may use this option
-# or --openpgp.
-
-#no-force-v3-sigs
-
-# Because some mailers change lines starting with "From " to ">From "
-# it is good to handle such lines in a special way when creating
-# cleartext signatures; all other PGP versions do it this way too.
-
-#no-escape-from-lines
-
-# If you do not use the Latin-1 (ISO-8859-1) charset, you should tell
-# GnuPG which is the native character set.  Please check the man page
-# for supported character sets.  This character set is only used for
-# metadata and not for the actual message which does not undergo any
-# translation.  Note that future version of GnuPG will change to UTF-8
-# as default character set.  In most cases this option is not required
-# as GnuPG is able to figure out the correct charset at runtime.
-
-#charset utf-8
-
-# Group names may be defined like this:
-#   group mynames = paige 0x12345678 joe patti
-#
-# Any time "mynames" is a recipient (-r or --recipient), it will be
-# expanded to the names "paige", "joe", and "patti", and the key ID
-# "0x12345678".  Note there is only one level of expansion - you
-# cannot make an group that points to another group.  Note also that
-# if there are spaces in the recipient name, this will appear as two
-# recipients.  In these cases it is better to use the key ID.
-
-#group mynames = paige 0x12345678 joe patti
-
-# Lock the file only once for the lifetime of a process.  If you do
-# not define this, the lock will be obtained and released every time
-# it is needed, which is usually preferable.
-
-#lock-once
-
-# GnuPG can send and receive keys to and from a keyserver.  These
-# servers can be HKP, email, or LDAP (if GnuPG is built with LDAP
-# support).
-#
-# Example HKP keyserver:
-#      hkp://keys.gnupg.net
-#      hkp://subkeys.pgp.net
-#
-# Example email keyserver:
-#      mailto:pgp-public-keys@keys.pgp.net
-#
-# Example LDAP keyservers:
-#      ldap://keyserver.pgp.com
-#
-# Regular URL syntax applies, and you can set an alternate port
-# through the usual method:
-#      hkp://keyserver.example.net:22742
-#
-# Most users just set the name and type of their preferred keyserver.
-# Note that most servers (with the notable exception of
-# ldap://keyserver.pgp.com) synchronize changes with each other.  Note
-# also that a single server name may actually point to multiple
-# servers via DNS round-robin.  hkp://keys.gnupg.net is an example of
-# such a "server", which spreads the load over a number of physical
-# servers.  To see the IP address of the server actually used, you may use
-# the "--keyserver-options debug".
-
-keyserver hkp://keys.gnupg.net
-#keyserver mailto:pgp-public-keys@keys.nl.pgp.net
-#keyserver ldap://keyserver.pgp.com
-
-# Common options for keyserver functions:
-#
-# include-disabled : when searching, include keys marked as "disabled"
-#                    on the keyserver (not all keyservers support this).
-#
-# no-include-revoked : when searching, do not include keys marked as
-#                      "revoked" on the keyserver.
-#
-# verbose : show more information as the keys are fetched.
-#           Can be used more than once to increase the amount
-#           of information shown.
-#
-# use-temp-files : use temporary files instead of a pipe to talk to the
-#                  keyserver.  Some platforms (Win32 for one) always
-#                  have this on.
-#
-# keep-temp-files : do not delete temporary files after using them
-#                   (really only useful for debugging)
-#
-# http-proxy="proxy" : set the proxy to use for HTTP and HKP keyservers.
-#                      This overrides the "http_proxy" environment variable,
-#                      if any.
-#
-# auto-key-retrieve : automatically fetch keys as needed from the keyserver
-#                     when verifying signatures or when importing keys that
-#                     have been revoked by a revocation key that is not
-#                     present on the keyring.
-#
-# no-include-attributes : do not include attribute IDs (aka "photo IDs")
-#                         when sending keys to the keyserver.
-
-#keyserver-options auto-key-retrieve
-
-# Display photo user IDs in key listings
-
-# list-options show-photos
-
-# Display photo user IDs when a signature from a key with a photo is
-# verified
-
-# verify-options show-photos
-
-# Use this program to display photo user IDs
-#
-# %i is expanded to a temporary file that contains the photo.
-# %I is the same as %i, but the file isn't deleted afterwards by GnuPG.
-# %k is expanded to the key ID of the key.
-# %K is expanded to the long OpenPGP key ID of the key.
-# %t is expanded to the extension of the image (e.g. "jpg").
-# %T is expanded to the MIME type of the image (e.g. "image/jpeg").
-# %f is expanded to the fingerprint of the key.
-# %% is %, of course.
-#
-# If %i or %I are not present, then the photo is supplied to the
-# viewer on standard input.  If your platform supports it, standard
-# input is the best way to do this as it avoids the time and effort in
-# generating and then cleaning up a secure temp file.
-#
-# If no photo-viewer is provided, GnuPG will look for xloadimage, eog,
-# or display (ImageMagick).  On Mac OS X and Windows, the default is
-# to use your regular JPEG image viewer.
-#
-# Some other viewers:
-# photo-viewer "qiv %i"
-# photo-viewer "ee %i"
-#
-# This one saves a copy of the photo ID in your home directory:
-# photo-viewer "cat > ~/photoid-for-key-%k.%t"
-#
-# Use your MIME handler to view photos:
-# photo-viewer "metamail -q -d -b -c %T -s 'KeyID 0x%k' -f GnuPG"
-
-# Passphrase agent
-#
-# We support the old experimental passphrase agent protocol as well as
-# the new Assuan based one (currently available in the "newpg" package
-# at ftp.gnupg.org/gcrypt/alpha/aegypten/).  To make use of the agent,
-# you have to run an agent as daemon and use the option
-#
-# use-agent
-# 
-# which tries to use the agent but will fallback to the regular mode
-# if there is a problem connecting to the agent.  The normal way to
-# locate the agent is by looking at the environment variable
-# GPG_AGENT_INFO which should have been set during gpg-agent startup.
-# In certain situations the use of this variable is not possible, thus
-# the option
-# 
-# --gpg-agent-info=<path>:<pid>:1
-#
-# may be used to override it.
-
-# Automatic key location
-#
-# GnuPG can automatically locate and retrieve keys as needed using the
-# auto-key-locate option.  This happens when encrypting to an email
-# address (in the "user@example.com" form), and there are no
-# user@example.com keys on the local keyring.  This option takes the
-# following arguments, in the order they are to be tried:
-# 
-# cert = locate a key using DNS CERT, as specified in RFC-4398.
-#        GnuPG can handle both the PGP (key) and IPGP (URL + fingerprint)
-#        CERT methods.
-#
-# pka = locate a key using DNS PKA.
-#
-# ldap = locate a key using the PGP Universal method of checking
-#        "ldap://keys.(thedomain)".  For example, encrypting to
-#        user@example.com will check ldap://keys.example.com.
-#
-# keyserver = locate a key using whatever keyserver is defined using
-#             the keyserver option.
-#
-# You may also list arbitrary keyservers here by URL.
-#
-# Try CERT, then PKA, then LDAP, then hkp://subkeys.net:
-#auto-key-locate cert pka ldap hkp://subkeys.pgp.net
-
-###+++--- GPGConf ---+++###
-utf8-strings
-#debug-level basic
-#log-file socket:///home/leo/kde/src/kdepim/messagecomposer/tests/gnupg_home/log-socket
-###+++--- GPGConf ---+++### Tue 29 Jun 2010 10:23:13 AM EDT
-# GPGConf edited this configuration file.
-# It will disable options before this marked block, but it will
-# never change anything below these lines.
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/gpgsm.conf.in akonadi-calendar-23.08.4/autotests/gnupg_home/gpgsm.conf.in
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/gpgsm.conf.in	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/gpgsm.conf.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,10 +0,0 @@
-
-###+++--- GPGConf ---+++###
-disable-crl-checks
-debug-level basic
-faked-system-time 20130110T154812
-log-file @CMAKE_CURRENT_BINARY_DIR@/gpgsm.log
-###+++--- GPGConf ---+++### Tue 29 Jun 2010 10:23:13 AM EDT
-# GPGConf edited this configuration file.
-# It will disable options before this marked block, but it will
-# never change anything below these lines.
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x000055578376f8d0.bifrost.65618 akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x000055578376f8d0.bifrost.65618
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x000055578376f8d0.bifrost.65618	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x000055578376f8d0.bifrost.65618	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-     65618
-bifrost
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x0000557aa7ed38a0.Brokkr.320445 akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x0000557aa7ed38a0.Brokkr.320445
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x0000557aa7ed38a0.Brokkr.320445	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x0000557aa7ed38a0.Brokkr.320445	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-    320445
-Brokkr
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x00005581b84e78a0.Brokkr.80512 akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x00005581b84e78a0.Brokkr.80512
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x00005581b84e78a0.Brokkr.80512	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x00005581b84e78a0.Brokkr.80512	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-     80512
-Brokkr
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x000055858a70d8d0.bifrost.55960 akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x000055858a70d8d0.bifrost.55960
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x000055858a70d8d0.bifrost.55960	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x000055858a70d8d0.bifrost.55960	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-     55960
-bifrost
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x0000561916f078d0.bifrost.88950 akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x0000561916f078d0.bifrost.88950
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x0000561916f078d0.bifrost.88950	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x0000561916f078d0.bifrost.88950	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-     88950
-bifrost
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x00005630b5fd58d0.bifrost.88819 akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x00005630b5fd58d0.bifrost.88819
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/.#lk0x00005630b5fd58d0.bifrost.88819	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/.#lk0x00005630b5fd58d0.bifrost.88819	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-     88819
-bifrost
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/openpgp-revocs.d/48BAF7236E952E4BDCF3748EA59CDFE1091524DC.rev akonadi-calendar-23.08.4/autotests/gnupg_home/openpgp-revocs.d/48BAF7236E952E4BDCF3748EA59CDFE1091524DC.rev
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/openpgp-revocs.d/48BAF7236E952E4BDCF3748EA59CDFE1091524DC.rev	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/openpgp-revocs.d/48BAF7236E952E4BDCF3748EA59CDFE1091524DC.rev	1970-01-01 01:00:00.000000000 +0100
@@ -1,35 +0,0 @@
-This is a revocation certificate for the OpenPGP key:
-
-pub   rsa3072 2023-05-13 [SC] [expires: 2025-05-12]
-      48BAF7236E952E4BDCF3748EA59CDFE1091524DC
-uid          Mr. UnitTest <unittest@dev.nul>
-
-A revocation certificate is a kind of "kill switch" to publicly
-declare that a key shall not anymore be used.  It is not possible
-to retract such a revocation certificate once it has been published.
-
-Use it to revoke this key in case of a compromise or loss of
-the secret key.  However, if the secret key is still accessible,
-it is better to generate a new revocation certificate and give
-a reason for the revocation.  For details see the description of
-of the gpg command "--generate-revocation" in the GnuPG manual.
-
-To avoid an accidental use of this file, a colon has been inserted
-before the 5 dashes below.  Remove this colon with a text editor
-before importing and publishing this revocation certificate.
-
-:-----BEGIN PGP PUBLIC KEY BLOCK-----
-Comment: This is a revocation certificate
-
-iQG2BCABCAAgFiEESLr3I26VLkvc83SOpZzf4QkVJNwFAmRf3toCHQAACgkQpZzf
-4QkVJNz8ZQwArwNjuCOEYxD9BNbXhhD9MxddJXNqfD/vnhbC21DgTbEfWqD7fxrU
-zR0ILw0NIFiZ+F/AJv6C0Bt2f3F7RgbXSSbSkkRflh7jKybbdMrbD4zZ6OCiW6se
-5GSDVSoQ7IT6eV9AmEBmHrIrtULTEIVbXsLgOw6JkUZfu9nhcFuLX12fkrFrKtfV
-wbvsQOBjrQSWzK+9dZOtAN6NuWWdpYdBwTN0WpRPaHecQrkf3L5iigA8kJFGXlvU
-03bvb/sDesRluktTe3rTCXWzvyLGkHmQQPLiz/OkjHurklCD7elMMhewu12LhBeg
-7eOaoiV4fEmsmTDbRaDPX3cHcJU+eQVNSdeyndhH2DpMsG0OHSYdL8IPjINqtK5u
-biAIFNfFobaWWYGakDdbyLWdVHR374bMBZYcVqbsu6yCKzlGRkXW8+TdWXIIQJYj
-+uPhmvZEGd7VaMLwV+nwCwRUJBvwci0Q9ErDUUgNbGNxglm5r4BcOsoP+z9tP8Ho
-/atPNGESLZNn
-=McLj
------END PGP PUBLIC KEY BLOCK-----
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/openpgp-revocs.d/7E501DEA81F62DB17389393325058D1857FDD0E7.rev akonadi-calendar-23.08.4/autotests/gnupg_home/openpgp-revocs.d/7E501DEA81F62DB17389393325058D1857FDD0E7.rev
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/openpgp-revocs.d/7E501DEA81F62DB17389393325058D1857FDD0E7.rev	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/openpgp-revocs.d/7E501DEA81F62DB17389393325058D1857FDD0E7.rev	1970-01-01 01:00:00.000000000 +0100
@@ -1,35 +0,0 @@
-This is a revocation certificate for the OpenPGP key:
-
-pub   rsa3072 2023-05-31 [S]
-      7E501DEA81F62DB17389393325058D1857FDD0E7
-uid          Mr. Unittest (no passphrase) <unittests@dev.nul>
-
-A revocation certificate is a kind of "kill switch" to publicly
-declare that a key shall not anymore be used.  It is not possible
-to retract such a revocation certificate once it has been published.
-
-Use it to revoke this key in case of a compromise or loss of
-the secret key.  However, if the secret key is still accessible,
-it is better to generate a new revocation certificate and give
-a reason for the revocation.  For details see the description of
-of the gpg command "--generate-revocation" in the GnuPG manual.
-
-To avoid an accidental use of this file, a colon has been inserted
-before the 5 dashes below.  Remove this colon with a text editor
-before importing and publishing this revocation certificate.
-
-:-----BEGIN PGP PUBLIC KEY BLOCK-----
-Comment: This is a revocation certificate
-
-iQG2BCABCAAgFiEEflAd6oH2LbFziTkzJQWNGFf90OcFAmR3sm0CHQAACgkQJQWN
-GFf90Oc2SwwAniw8qWucMHrXRoB+mI+sRdBnRSJN/EXgcnSIBJTCyPWycTpBWR2l
-KB14SVQltYcLURF27ohFrVTwsRUV9Z2VwRuV7262DlEDEMMgn00c4Nhe56hL/4HX
-nOLLTO9NbH8qB2ea63JVA9H/KXvMzVsLKggy2FVZwSWEtyL38etKl/ZjpCpHIrHl
-/R+mrX73OfU6kA9PUgrWxy/DFjvIiGQbznDGfDY93ewwrL7vMMXmXrF8Mog2UuUl
-KrE7toAd/VWqfxAbKFU43U+diHulr/tpscR6PyZE/ic9YWKUsdQFBLitDhgnstoQ
-NKx8YEAdc220SQk+PHauO+cl6BL2d1zogHfQ+W/PK/1J2d+zAm4gi30Q1jcVj5SR
-MskQ3hauWs4LB7qS41WoyKSTKZgMNq1mT5qx26ibqEgQC6JKhl/RlOPMOdgF35Qn
-JPEaVEl9v7nNI3kBtJm6c2kqaNaKrZVxkz0jsqiBRBunnLg+x0MBIuCg2/N2zLbr
-Gfzc/075BYxc
-=oqTP
------END PGP PUBLIC KEY BLOCK-----
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/openpgp-revocs.d/E187A7C3FC78B3BDD2B3EF6495B9B82200EF61C6.rev akonadi-calendar-23.08.4/autotests/gnupg_home/openpgp-revocs.d/E187A7C3FC78B3BDD2B3EF6495B9B82200EF61C6.rev
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/openpgp-revocs.d/E187A7C3FC78B3BDD2B3EF6495B9B82200EF61C6.rev	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/openpgp-revocs.d/E187A7C3FC78B3BDD2B3EF6495B9B82200EF61C6.rev	1970-01-01 01:00:00.000000000 +0100
@@ -1,35 +0,0 @@
-This is a revocation certificate for the OpenPGP key:
-
-pub   rsa3072 2023-05-13 [SC] [expires: 2025-05-12]
-      E187A7C3FC78B3BDD2B3EF6495B9B82200EF61C6
-uid          Mr. Unittest (no passphrase) <unittests@dev.nul>
-
-A revocation certificate is a kind of "kill switch" to publicly
-declare that a key shall not anymore be used.  It is not possible
-to retract such a revocation certificate once it has been published.
-
-Use it to revoke this key in case of a compromise or loss of
-the secret key.  However, if the secret key is still accessible,
-it is better to generate a new revocation certificate and give
-a reason for the revocation.  For details see the description of
-of the gpg command "--generate-revocation" in the GnuPG manual.
-
-To avoid an accidental use of this file, a colon has been inserted
-before the 5 dashes below.  Remove this colon with a text editor
-before importing and publishing this revocation certificate.
-
-:-----BEGIN PGP PUBLIC KEY BLOCK-----
-Comment: This is a revocation certificate
-
-iQG2BCABCAAgFiEE4Yenw/x4s73Ss+9klbm4IgDvYcYFAmRf37ICHQAACgkQlbm4
-IgDvYcYFywwAjopoq3oxGcCgkivMzlISyDC/qIZe/i6AS84vBI3YEB0/FdN58dTv
-urhejBV+Nhyipnx6thz/d1Y5wEy4s1/IvgNYIh3qe3yOxY4cK8ngvDCD30DKf0Aw
-QSawz77vTQE6eFYfH9M0VBA2url4vjZQ8fzzrJL/tqSWG2v/k3VfvOI8BuWAqYoo
-o6Bjq+MZIfKW4wY8//hKQ0j3JahnXC/la80zIkQlQrgUtsPEGObq5cbkh1gPNvJ8
-gmM9GgGVpJFa/zd4eYDrqi+v1Iyc8q9pTSvmxw/zCZtqZLwcSdK5n63lr9sWuy5i
-RtI+9f1hXWvixOzGRioStpIRCymWuoaiad2Pr0UgBsPUqu37O9+ovksMyt13dvON
-6xuJzKYETkSG8CdjCD6/Awoxg3xZEv3zpZOLXx2VYFU3f82iFz3uyhtxnqRBCfJc
-g2k/R0kd3RX3AU5feF3kRx2cOZDyApwH7R387MaS/RFkznsMGyPjpQkdwnt94wri
-IvZ2nZ/QTzE/
-=qggV
------END PGP PUBLIC KEY BLOCK-----
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/pinentry-fake.sh akonadi-calendar-23.08.4/autotests/gnupg_home/pinentry-fake.sh
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/pinentry-fake.sh	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/pinentry-fake.sh	1970-01-01 01:00:00.000000000 +0100
@@ -1,9 +0,0 @@
-#!/bin/sh
-
-echo "OK Your orders please"
-while :
-do
-	read cmd
-	echo "OK"
-	[ "$cmd" = "BYE" ] && break
-done
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/private-keys-v1.d/74D5844526608A22B14BD5320F3CF41122175D80.key akonadi-calendar-23.08.4/autotests/gnupg_home/private-keys-v1.d/74D5844526608A22B14BD5320F3CF41122175D80.key
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/private-keys-v1.d/74D5844526608A22B14BD5320F3CF41122175D80.key	2023-11-22 20:09:08.605106479 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/private-keys-v1.d/74D5844526608A22B14BD5320F3CF41122175D80.key	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-Created: 20230531T204731
-Key: (private-key (rsa (n #00D00F87C9188F10F9312CAEF0A38AACCF9E09812FBA
- 6E2286D48C347F624B61E2DFB3067F494BB6BF3D4422ACCF30FA2222E38D0A6C66B791
- C23282F55B0977EAAF2CD0BFB394718ED75268E24DE32724585A4B7814435A8D7653AE
- 39AE5E7AC090125E9B4938BF45A87E5D6CCDB9FC1E9BBB2B289368D2C1EE99E4BD7F87
- AAAE019F2B47BF31AD7A93BA8042BDF9A87C3BC1CEACC1C79E9827D77632D82F7834FC
- 9879F0DAA31A0F5145FB7118D66111C6E40F81BFBAE45A5463721D755D06784A5BD883
- 94F312FDA9E0A2B4DF076C923E2C0226FF7938AAECE1CDD869768B2C1E3AD5FBBCDCB5
- 8DDC25BE83D8A6DF26E8836011F8D05F278B81FF8541BCA63E2892DE141F3A03604C7A
- 6A8600A5F03D7AF5CAE7CC77FF6BF1A8F62DE6C2AC4DB3CBFD4B4089F20246A8355D45
- 1EEC1561C92E15946DDFB18D2726E80701D85E64B255293202A1E432CEA3EB038FFBC4
- 488075EB7A95D5DC86C35236CAC60CFF5F9F3CF4CF7EE86359B78DBD5B222FD50BCED7
- 5659DF9A192AF86C7D29C43E7D#)(e #010001#)(d
-  #08E6F85279D6A45B9C4B230985ECF39D7FDDE721B437D098600DC73F08F34E4F73C3
- F66BFB9816BDF9908D510A731BB0BE004DD3263CE58BD75CC1409843CE72B566F87C75
- FE776F9EA07A29EE736F204F50CCD84C8F6E893816FE10D6DBE678E538506FBE0DBD6B
- 25EB74E48BE4E41461DB6D86FA5DE70B1650555E2FA50DD54627D2C1B1AEAC21A630B9
- E1BDA04676AEC76CE0F4892DACC5A330FD9D7E299432D066749E880358E119AFC97EEA
- AC68CDFA5051C372EB20CD69FEFB6A2321D1FE04C805314D23C1B5F760BB9242244A11
- D75286754150F4CED577DAAD7AC9ADFE5F389F9B6119FD52C32F93158F5832F973A99B
- BDFAD135B987FD885FCAC0E37B494E1F0605FD6F284C5E7C179C81E583CC03B8F410FB
- FAEC6D2763F16641CA353D8FB893C7CA488160ABAA02AC452D3A56FA478484A74963EB
- F7A5D677D60C93E5DC62A52A020CD9D9CAD4099A712F8C7974670984D294359CB3E43D
- 90F6BC96590E92A9551BA5E9B61E3166ED8D4DEFAD3AF820173A29C6B1943A94BC7F8D
- #)(p #00DC9F14CA3AAD4932AA82D8E66395E08EB9A05589F6A810C2BB564DF1200BDA
- 26A9902078F530B55050F1A68210172E73B7BC252F0058D0024EA25BAC952441B8FAB3
- 960D9A188C6B698476466F6C80281185C32AC575F0EAE40C8D5B44E8FEA4F6095ED093
- 51F76A8F91160EA5EAE2AC1B4E637EA271A064F9F1456B8191CBBF818FE47C2C5C5876
- 4B21DC5EBA93E3CB4D645B483E629B63DF9415F57209704A9FFC4DD71E94CA571B0170
- AF225A29997A603DFA40FC673428CC2D7AD795DE13#)(q
-  #00F16CCEA9562A19B5A8EECA9F6A65CD13C96587CA824F606AC8BE786F36D239A890
- 5C34CFB880C659F04FB478A5939E1B8D408E11D79EF5F6F1D5D0A0EA10BF7D2E159ADE
- DFF7B0EF7950BB161492A83F7F06ADFD18474DEBF136185CF90749BD9053A6253ADA9B
- F43F70170F1206B288D61B95EDA728AF580C89E6A3113FE13534153797439BFDD715D7
- 76AFCCC2965335FE9391709DB06E598A9DA42AAA43C3EA81A100F3BB9448507B063469
- 9668F038ADB4ACD0FF123890F201DE2188C32F#)(u
-  #00BF51F9313FED57D81454AFB25233F52B0AB0BD458570E16FBEBBE48B3970C1187B
- C26836FAE14798E1701175B962B40E386330E8420E14302546301054ECEA8547DE7B5D
- D824D34BE13FEBB970156618067050FCAFC89150F15198F38B57994BFA4CE85F219549
- 9CEB631F0A74C0461CEB0DF97E4547C3EAFD75E4C5CFEFA133402AF8A8C452AF0AE9FB
- 33725601A3C330FF1EFFBD9F1A45FE38730D3D70557C026C68D01A7E3F98B616E2B564
- C52465B826727096C62F1382A902DE8870E689#)))
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/private-keys-v1.d/DC8D6F65743B70AB2EDFD4E2D067C66E62AB82AB.key akonadi-calendar-23.08.4/autotests/gnupg_home/private-keys-v1.d/DC8D6F65743B70AB2EDFD4E2D067C66E62AB82AB.key
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/private-keys-v1.d/DC8D6F65743B70AB2EDFD4E2D067C66E62AB82AB.key	2023-11-22 20:09:08.605106479 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/private-keys-v1.d/DC8D6F65743B70AB2EDFD4E2D067C66E62AB82AB.key	1970-01-01 01:00:00.000000000 +0100
@@ -1,42 +0,0 @@
-Created: 20230531T204731
-Key: (private-key (rsa (n #00A5A37DAE07AD5EA5DE044A41DCFAE0E2B0FE65132B
- 62E673ECCC507D7EDC1AF94D10A0E2A3B39DD99BA0B6882BD6B3A8A21CCBC59F8E8518
- 288F52BCC3900FAE0ADD3701E0C49AB4EFE409570B0B8CF323F4E89A2B24BA1C32F84A
- 66295E01A8691D397B315EB099D876E2FD74EA2880703BF22649A0C7F073E033C6C6A3
- ED738B585427467AC69192FF51177113F1F56BB9D21A186408DB44CD6BCB27B671C66B
- 11B5495EEAA098100C466AC64F52080E784B3805947AC29F8A94CDB2417BC6D38E7B84
- FE111A0114D607325DB0AC72001EF0C2C282407CD64D4F5D587CD9EACC1A7C5A652337
- B85BBCADF167F103D2392636BAD9CBE5C0F4FE8AC9E3F06DF6DDED7D394B1055851BA7
- A3AE5422926495B68737274EC4359C23AE3D1114728CFFD9784BA90E24F29C5E636270
- 1BCE6C7F4B7AD12ABD51E90E77A7264D2DE0D6593B2C63B58FF682B738518FFD75BE3E
- 65CA06B2227601436D907657583C798D127C41C60B97F94BE662A11ED6513AD9663B31
- 9BB3792BB91B4A7E97D320570B#)(e #010001#)(d
-  #47CF57F2E5802BAAF4545ECF2C1B15F921ABC0AD2D5F9CB2806459B6F6933D1C7CE5
- 2B22E6BEBDBDF4431A2F71F60C809CFBA7FA3F00DE41C97FCD6A69CC6087DF4CE586AA
- 6801FC548E43E05939023BFD0835F9749FE111CDA528381F52129CED294EDCD25C0F6B
- 3B55DB75EFC47E97A450D0DBF98ABB73CB00D5E1A507B7AFA2A742209EE526864138F0
- 729DC2FC609E79FA94F6A313D5DFFFC0EE5C02B453C5E270FA64AC8AC03220E83C6D4A
- 41319DF857FFEB27628B52F895279252E2726F7CE5F7D6E86EC1028A36B21FAFFA1478
- 7E098437C8D6F96E1B4D75DF959765F0A0D08AC2816AF19FC7E40076A1640D15046244
- A8F6BD534F0FDF56DD50D03495AFE538C801E8B4BC17989FF14793C1F2A98F83280B47
- 6EFD534381F74FCFD3E9BC444BFCC49DE24B2547059EC7C6360292BB9035F21DF2036E
- 7238F1FB01B81ECC7DEB132E1223FF238692038FA06C179CB59484D600DC44E9B17524
- AE827CE26B216B3DB7D4ADC9E22C162284D8FD489A94066B21AF5AF9BAD516790BB9A9
- #)(p #00CA6C9B33AD22FE72C3D72FA87655C4AAF13F27F4F324F5D08F2A6D220F48F0
- 9A1F8A11FB02ADA40FB48637E11599A6A22E926777082B71B89D51B6631A92794124EE
- A1722FED37BEAABBAA07896D0CAC4A476230491695DD8EA11D37B187B06DB93C924B25
- FD3A2B691D91BEFC10150D5D421EC55A7360322FC428805940510F502F510D95973424
- 3FFBFFAB7310582D59C8CEC1099A93E62BDD2343C44BF3AEC75E4A690C07F7F12B354C
- 428A8F58FD03D53387A4F9B7F45FBBAE1B292DC793#)(q
-  #00D17A735B2B78FBD054B4A43917D0AB73672B32F2028CE6197E48FCA5CD9C7DF345
- 3BD979C78194276B44AE5D63751198F6AA52C6B6157022A1698C2A4E0579F1829FC8D8
- 8D5218FF9DDB54E0EE344A353508F0F80A9849A466F5CFD9D9FB3899448C4644B0E2D7
- AD6F7D5D8A1E5E996900403D2C698310986867358BAE987592062E1A2F979C7BD65202
- 9715E90E1D02B4FCA04A58FB613BF510B4E0D7352C8B000EE15A4B44F727653C025D99
- 64A8B439B5BFB826EA12D6101689143B1A6DA9#)(u
-  #77E4D9C39F57FA9FDE0B1904E05DD09B3ECE7E9800F2B5D14C6FE3AA72AA0A8EA954
- 1C356C6F3D075BE1F568A41430716F4B52FDE068FEDF08D16C1D75D35C92622BA14AA5
- 5562B379113D6895DF70DBAC64B31C0C52E98C59AA0A73CA3ED9B280723937DD3F3AFC
- 6D8327F9D2860A8940900C3E09D0D9D17BE7299F48E513213DEA14020873479C908186
- AF05D4F0117F7456835C399E45E1F2FFDB53DB704A368D4EDCAD814FCD3B83AF1A93A8
- 76B89647D896F7DD13D893E5746CE0C88A29#)))
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/scdaemon.conf akonadi-calendar-23.08.4/autotests/gnupg_home/scdaemon.conf
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/scdaemon.conf	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/scdaemon.conf	1970-01-01 01:00:00.000000000 +0100
@@ -1,8 +0,0 @@
-
-###+++--- GPGConf ---+++###
-debug-level basic
-log-file socket:///home/leo/kde/src/kdepim/messagecomposer/tests/gnupg_home/log-socket
-###+++--- GPGConf ---+++### Tue 29 Jun 2010 10:23:13 AM EDT
-# GPGConf edited this configuration file.
-# It will disable options before this marked block, but it will
-# never change anything below these lines.
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/sshcontrol akonadi-calendar-23.08.4/autotests/gnupg_home/sshcontrol
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/sshcontrol	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/sshcontrol	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-# List of allowed ssh keys.  Only keys present in this file are used
-# in the SSH protocol.  The ssh-add tool may add new entries to this
-# file to enable them; you may also add them manually.  Comment
-# lines, like this one, as well as empty lines are ignored.  Lines do
-# have a certain length limit but this is not serious limitation as
-# the format of the entries is fixed and checked by gpg-agent. A
-# non-comment line starts with optional white spaces, followed by the
-# keygrip of the key given as 40 hex digits, optionally followed by a
-# caching TTL in seconds, and another optional field for arbitrary
-# flags.   Prepend the keygrip with an '!' mark to disable it.
-
diff -ruN akonadi-calendar-23.08.4.orig/autotests/gnupg_home/trustlist.txt akonadi-calendar-23.08.4/autotests/gnupg_home/trustlist.txt
--- akonadi-calendar-23.08.4.orig/autotests/gnupg_home/trustlist.txt	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/gnupg_home/trustlist.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-5E:7C:B2:F4:9F:70:05:43:42:32:5D:75:74:70:00:09:B9:D8:08:61 S
-
-
-
-# CN=unittest cert
-# O=KDAB
-# C=US
-# EMail=test@example.com
-24:D2:FC:A2:2E:B3:B8:0A:1E:37:71:D1:4C:C6:58:E3:21:2B:49:DC S
-
-
diff -ruN akonadi-calendar-23.08.4.orig/autotests/mailclienttest.cpp akonadi-calendar-23.08.4/autotests/mailclienttest.cpp
--- akonadi-calendar-23.08.4.orig/autotests/mailclienttest.cpp	2023-11-22 20:09:08.601106900 +0100
+++ akonadi-calendar-23.08.4/autotests/mailclienttest.cpp	2023-11-22 20:09:11.896759820 +0100
@@ -8,47 +8,22 @@
 
 #include "mailclient_p.h"
 
-#include <Akonadi/ItemCreateJob>
 #include <Akonadi/MessageQueueJob>
 #include <KCalendarCore/FreeBusy>
 #include <KCalendarCore/Incidence>
-#include <KContacts/Addressee>
 #include <KIdentityManagement/Identity>
-#include <MessageComposer/ContactPreference>
-
-#include <gpgme++/context.h>
-#include <gpgme++/keylistresult.h>
 
 #include <akonadi/qtest_akonadi.h>
 
 #include <QObject>
 #include <QTestEventLoop>
 
-const QString s_ourEmail = QStringLiteral("unittests@dev.nul"); // change also in kdepimlibs/akonadi/calendar/tests/unittestenv/kdehome/share/config
-const auto s_ourGpgKey = QByteArray("7E501DEA81F62DB17389393325058D1857FDD0E7");
-
-const QString s_testEmail = QStringLiteral("test@example.com");
-const auto s_testGpgKey = QByteArray("D6003D89B2840A1B1888C39E5AB1CE1311F6B1DB");
-
-const QString s_test2Email = QStringLiteral("test2@example.com");
-const auto s_test2GpgKey = QByteArray("A9794D762BC67B1DEB161CDD8B3613B451672CB8");
-
-enum class CryptoState { Plain, Signed, Encrypted };
-
-struct ExpectedDialog {
-    QString text;
-    Akonadi::ITIPHandlerDialogDelegate::DialogAction action;
-};
-
-using ContactPreferences = QMap<QString, MessageComposer::ContactPreference>;
+static const char *s_ourEmail = "unittests@dev.nul"; // change also in kdepimlibs/akonadi/calendar/tests/unittestenv/kdehome/share/config
 
 using namespace Akonadi;
 
 Q_DECLARE_METATYPE(KIdentityManagement::Identity)
 Q_DECLARE_METATYPE(KCalendarCore::Incidence::Ptr)
-Q_DECLARE_METATYPE(CryptoState)
-Q_DECLARE_METATYPE(QVector<ExpectedDialog>)
-Q_DECLARE_METATYPE(ContactPreferences)
 
 class FakeMessageQueueJob : public Akonadi::MessageQueueJob
 {
@@ -80,43 +55,6 @@
 
 UnitTestResult::List FakeMessageQueueJob::sUnitTestResults;
 
-class FakeITIPHandlerDialogDelegate : public ITIPHandlerDialogDelegate
-{
-public:
-    explicit FakeITIPHandlerDialogDelegate(const KCalendarCore::Incidence::Ptr &incidence, KCalendarCore::iTIPMethod method, QWidget *parent = nullptr)
-        : ITIPHandlerDialogDelegate(incidence, method, parent)
-    {
-    }
-
-    static QVector<ExpectedDialog> expectedWarningTwoActionsCancelDialogs;
-
-protected:
-    int warningTwoActionsCancel(const QString &text, const QString &title, const KGuiItem &, const KGuiItem &, const KGuiItem &) override
-    {
-        if (expectedWarningTwoActionsCancelDialogs.empty()) {
-            QTest::qFail("Unexpected dialog - the testcase doesn't expect any dialog", __FILE__, __LINE__);
-            qDebug() << "Dialog title:" << title;
-            qDebug() << "Dialog text:" << text;
-            return ITIPHandlerDialogDelegate::CancelAction;
-        }
-
-        const auto expected = expectedWarningTwoActionsCancelDialogs.front();
-        expectedWarningTwoActionsCancelDialogs.erase(expectedWarningTwoActionsCancelDialogs.begin());
-
-        if (!title.contains(expected.text) && !text.contains(expected.text)) {
-            QTest::qFail("Mismatching dialog - the dialog text doesn't match the expected string", __FILE__, __LINE__);
-            qDebug() << "Dialog title:" << title;
-            qDebug() << "Dialog text:" << text;
-            qDebug() << "Expected substring:" << expected.text;
-            return ITIPHandlerDialogDelegate::CancelAction;
-        }
-
-        return expected.action;
-    }
-};
-
-QVector<ExpectedDialog> FakeITIPHandlerDialogDelegate::expectedWarningTwoActionsCancelDialogs;
-
 class FakeITIPHandlerComponentFactory : public ITIPHandlerComponentFactory
 {
 public:
@@ -132,63 +70,14 @@
         Q_UNUSED(identity)
         return new FakeMessageQueueJob(parent);
     }
-
-    ITIPHandlerDialogDelegate *
-    createITIPHanderDialogDelegate(const KCalendarCore::Incidence::Ptr &incidence, KCalendarCore::iTIPMethod method, QWidget *parent = nullptr) override
-    {
-        return new FakeITIPHandlerDialogDelegate(incidence, method, parent);
-    }
-};
-
-class TestableMailClient : public MailClient
-{
-public:
-    TestableMailClient(QObject *parent)
-        : MailClient(new FakeITIPHandlerComponentFactory(parent), parent)
-    {
-        // Disable Akonadi contacts lookup - we ain't gonna find anything anyway,
-        // since there's no indexer in the test env
-        setAkonadiLookupEnabled(false);
-    }
-
-    static ContactPreferences preferences;
-
-private:
-    std::optional<MessageComposer::ContactPreference> contactPreference(const QString &address) override
-    {
-        auto it = preferences.constFind(address);
-        if (it != preferences.cend()) {
-            return *it;
-        }
-
-        return {};
-    }
-
-    bool showKeyApprovalDialog() const override
-    {
-        return false; // no gui in tests!
-    }
 };
 
-ContactPreferences TestableMailClient::preferences;
-
-static MessageComposer::ContactPreference
-createPreference(const QByteArray &key, Kleo::EncryptionPreference encPref, Kleo::SigningPreference sigPref = Kleo::UnknownSigningPreference)
-{
-    MessageComposer::ContactPreference preference;
-    preference.pgpKeyFingerprints.push_back(QString::fromLatin1(key));
-    preference.encryptionPreference = encPref;
-    preference.signingPreference = sigPref;
-    preference.cryptoMessageFormat = Kleo::AnyOpenPGP;
-    return preference;
-}
-
 class MailClientTest : public QObject
 {
     Q_OBJECT
 
 private:
-    TestableMailClient *mMailClient = nullptr;
+    MailClient *mMailClient = nullptr;
     int mPendingSignals;
     MailClient::Result mLastResult;
     QString mLastErrorMessage;
@@ -200,7 +89,7 @@
         AkonadiTest::checkTestIsIsolated();
 
         mPendingSignals = 0;
-        mMailClient = new TestableMailClient(this);
+        mMailClient = new MailClient(new FakeITIPHandlerComponentFactory(this), this);
         mLastResult = MailClient::ResultSuccess;
         connect(mMailClient, &MailClient::finished, this, &MailClientTest::handleFinished);
     }
@@ -222,34 +111,23 @@
         QTest::addColumn<QStringList>("expectedToList");
         QTest::addColumn<QStringList>("expectedCcList");
         QTest::addColumn<QStringList>("expectedBccList");
-        QTest::addColumn<CryptoState>("expectedCrypto");
-        QTest::addColumn<QVector<ExpectedDialog>>("expectedDialogs");
-        QTest::addColumn<ContactPreferences>("contactPreferences");
 
         KCalendarCore::Incidence::Ptr incidence(new KCalendarCore::Event());
         KIdentityManagement::Identity identity;
-        identity.setPrimaryEmailAddress(s_ourEmail);
-
-        KIdentityManagement::Identity cryptoIdentity = identity;
-        cryptoIdentity.setPGPSigningKey(s_ourGpgKey);
-        cryptoIdentity.setPGPEncryptionKey(s_ourGpgKey);
-        cryptoIdentity.setPgpAutoSign(true);
-        cryptoIdentity.setPgpAutoEncrypt(true);
-
-        bool bccMe = false;
+        bool bccMe;
         QString attachment;
         QString transport;
         MailClient::Result expectedResult = MailClient::ResultNoAttendees;
         const int expectedTransportId = 69372773; // from tests/unittestenv/kdehome/share/config/mailtransports
-        const QString expectedFrom = s_ourEmail; // from tests/unittestenv/kdehome/share/config/emailidentities
-        KCalendarCore::Person organizer(QStringLiteral("Organizer"), s_ourEmail);
+        const QString expectedFrom = QStringLiteral("unittests@dev.nul"); // from tests/unittestenv/kdehome/share/config/emailidentities
+        KCalendarCore::Person organizer(QStringLiteral("Organizer"), QStringLiteral("unittests@dev.nul"));
 
         QStringList toList;
         QStringList toCcList;
         QStringList toBccList;
         //----------------------------------------------------------------------------------------------
         QTest::newRow("No attendees") << incidence << identity << bccMe << attachment << transport << expectedResult << -1 << QString() << toList << toCcList
-                                      << toBccList << CryptoState::Plain << QVector<ExpectedDialog>{} << ContactPreferences{};
+                                      << toBccList;
         //----------------------------------------------------------------------------------------------
         // One attendee, but without e-mail
         KCalendarCore::Attendee attendee(QStringLiteral("name1"), QString());
@@ -257,7 +135,7 @@
         incidence->addAttendee(attendee);
         expectedResult = MailClient::ResultReallyNoAttendees;
         QTest::newRow("No attendees with email") << incidence << identity << bccMe << attachment << transport << expectedResult << -1 << QString() << toList
-                                                 << toCcList << toBccList << CryptoState::Plain << QVector<ExpectedDialog>{} << ContactPreferences{};
+                                                 << toCcList << toBccList;
         //----------------------------------------------------------------------------------------------
         // One valid attendee
         attendee = KCalendarCore::Attendee(QStringLiteral("name1"), QStringLiteral("test@foo.org"));
@@ -267,7 +145,7 @@
         expectedResult = MailClient::ResultSuccess;
         toList << QStringLiteral("test@foo.org");
         QTest::newRow("One attendee") << incidence << identity << bccMe << attachment << transport << expectedResult << expectedTransportId << expectedFrom
-                                      << toList << toCcList << toBccList << CryptoState::Plain << QVector<ExpectedDialog>{} << ContactPreferences{};
+                                      << toList << toCcList << toBccList;
         //----------------------------------------------------------------------------------------------
         // One valid attendee
         attendee = KCalendarCore::Attendee(QStringLiteral("name1"), QStringLiteral("test@foo.org"));
@@ -278,87 +156,7 @@
         expectedResult = MailClient::ResultSuccess;
         // Should default to the default transport
         QTest::newRow("Invalid transport") << incidence << identity << bccMe << attachment << invalidTransport << expectedResult << expectedTransportId
-                                           << expectedFrom << toList << toCcList << toBccList << CryptoState::Plain << QVector<ExpectedDialog>{}
-                                           << ContactPreferences{};
-
-        //----------------------------------------------------------------------------------------------
-        // One valid attendee, identity wants to sign
-        {
-            auto ident = identity;
-            ident.setPGPSigningKey(s_ourGpgKey);
-            ident.setPgpAutoSign(true);
-
-            QTest::newRow("One attendee, identity wants to sign")
-                << incidence << ident << bccMe << attachment << transport << expectedResult << expectedTransportId << expectedFrom << toList << toCcList
-                << toBccList << CryptoState::Signed << QVector<ExpectedDialog>{} << ContactPreferences{};
-        }
-
-        //----------------------------------------------------------------------------------------------
-        // One valid attendee, identity wants to encrypt
-        {
-            KCalendarCore::Incidence::Ptr inc{incidence->clone()};
-            inc->clearAttendees();
-            inc->addAttendee(KCalendarCore::Attendee({}, s_testEmail));
-            // No crypto preference for the attendee
-
-            QTest::newRow("One attendee, identity wants to encrypt")
-                << inc << cryptoIdentity << bccMe << attachment << transport << expectedResult << expectedTransportId << expectedFrom
-                << QStringList({s_testEmail}) << toCcList << toBccList << CryptoState::Encrypted << QVector<ExpectedDialog>{} << ContactPreferences{};
-        }
-
-        //----------------------------------------------------------------------------------------------
-        // One valid attendee, attendee wants to encrypt
-        {
-            auto ident = identity;
-            ident.setPGPSigningKey(s_ourGpgKey);
-            ident.setPGPEncryptionKey(s_ourGpgKey);
-
-            KCalendarCore::Incidence::Ptr inc{incidence->clone()};
-            inc->clearAttendees();
-            inc->addAttendee(KCalendarCore::Attendee({}, s_testEmail));
-
-            QTest::newRow("One attendee, attendee wants to encrypt")
-                << inc << ident << bccMe << attachment << transport << expectedResult << expectedTransportId << expectedFrom << QStringList({s_testEmail})
-                << toCcList << toBccList << CryptoState::Encrypted << QVector<ExpectedDialog>{}
-                << ContactPreferences{{s_testEmail, createPreference(s_testGpgKey, Kleo::AlwaysEncrypt, Kleo::AlwaysSign)}};
-        }
-
-        //----------------------------------------------------------------------------------------------
-        // Two attendees, one without key
-        {
-            auto ident = identity;
-            ident.setPGPSigningKey(s_ourGpgKey);
-            ident.setPGPEncryptionKey(s_ourGpgKey);
-
-            KCalendarCore::Incidence::Ptr inc{incidence->clone()};
-            inc->addAttendee(KCalendarCore::Attendee({}, s_testEmail));
-
-            QTest::newRow("Two attendees, one wants encryption, one has no key")
-                << inc << ident << bccMe << attachment << transport << expectedResult << expectedTransportId << expectedFrom
-                << QStringList({QStringLiteral("test@foo.org"), s_testEmail}) << toCcList << toBccList << CryptoState::Plain
-                << QVector<ExpectedDialog>{{QStringLiteral("conflicting encryption preferences"),
-                                            ITIPHandlerDialogDelegate::SecondaryAction /* do not encrypt */}}
-                << ContactPreferences{{s_testEmail, createPreference(s_testGpgKey, Kleo::AlwaysEncrypt)}};
-        }
-
-        //----------------------------------------------------------------------------------------------
-        // Two attendees, both have key but only one explicitly wants encryption - we should encrypt anyway
-        {
-            auto ident = identity;
-            ident.setPGPSigningKey(s_ourGpgKey);
-            ident.setPGPEncryptionKey(s_ourGpgKey);
-
-            KCalendarCore::Incidence::Ptr inc{incidence->clone()};
-            inc->clearAttendees();
-            inc->addAttendee(KCalendarCore::Attendee({}, s_testEmail));
-            inc->addAttendee(KCalendarCore::Attendee({}, s_test2Email));
-
-            QTest::newRow("Two attendees, both have keys but only one explicitly wants encryption")
-                << inc << ident << bccMe << attachment << transport << expectedResult << expectedTransportId << expectedFrom
-                << QStringList({s_testEmail, s_test2Email}) << toCcList << toBccList << CryptoState::Encrypted << QVector<ExpectedDialog>{}
-                << ContactPreferences{{s_test2Email, createPreference(s_test2GpgKey, Kleo::AlwaysEncrypt)}};
-        }
-
+                                           << expectedFrom << toList << toCcList << toBccList;
         //----------------------------------------------------------------------------------------------
         // One valid attendee, and bcc me
         attendee = KCalendarCore::Attendee(QStringLiteral("name1"), QStringLiteral("test@foo.org"));
@@ -368,9 +166,9 @@
         expectedResult = MailClient::ResultSuccess;
         // Should default to the default transport
         toBccList.clear();
-        toBccList << s_ourEmail;
+        toBccList << QStringLiteral("unittests@dev.nul");
         QTest::newRow("Test bcc") << incidence << identity << /*bccMe*/ true << attachment << transport << expectedResult << expectedTransportId << expectedFrom
-                                  << toList << toCcList << toBccList << CryptoState::Plain << QVector<ExpectedDialog>{} << ContactPreferences{};
+                                  << toList << toCcList << toBccList;
         //----------------------------------------------------------------------------------------------
         // Test CC list
         attendee = KCalendarCore::Attendee(QStringLiteral("name1"), QStringLiteral("test@foo.org"));
@@ -386,12 +184,12 @@
         expectedResult = MailClient::ResultSuccess;
         // Should default to the default transport
         toBccList.clear();
-        toBccList << s_ourEmail;
+        toBccList << QStringLiteral("unittests@dev.nul");
 
         toCcList.clear();
         toCcList << QStringLiteral("optional@foo.org") << QStringLiteral("non@foo.org");
         QTest::newRow("Test cc") << incidence << identity << /*bccMe*/ true << attachment << transport << expectedResult << expectedTransportId << expectedFrom
-                                 << toList << toCcList << toBccList << CryptoState::Plain << QVector<ExpectedDialog>{} << ContactPreferences{};
+                                 << toList << toCcList << toBccList;
     }
 
     void testMailAttendees()
@@ -407,15 +205,9 @@
         QFETCH(QStringList, expectedToList);
         QFETCH(QStringList, expectedCcList);
         QFETCH(QStringList, expectedBccList);
-        QFETCH(CryptoState, expectedCrypto);
-        QFETCH(QVector<ExpectedDialog>, expectedDialogs);
-        QFETCH(ContactPreferences, contactPreferences);
 
         FakeMessageQueueJob::sUnitTestResults.clear();
 
-        FakeITIPHandlerDialogDelegate::expectedWarningTwoActionsCancelDialogs = expectedDialogs;
-        TestableMailClient::preferences = contactPreferences;
-
         mPendingSignals = 1;
         mMailClient->mailAttendees(incidence, identity, bccMe, attachment, transport);
         waitForSignals();
@@ -425,37 +217,22 @@
             QVERIFY(false);
         }
 
+        UnitTestResult unitTestResult;
         if (FakeMessageQueueJob::sUnitTestResults.isEmpty()) {
             qDebug() << "mail results are empty";
         } else {
-            const auto unitTestResult = FakeMessageQueueJob::sUnitTestResults.first();
-            if (expectedTransportId != -1 && unitTestResult.transportId != expectedTransportId) {
-                qDebug() << "got " << unitTestResult.transportId << "; expected=" << expectedTransportId;
-                QVERIFY(false);
-            }
-
-            QCOMPARE(unitTestResult.from, expectedFrom);
-            QCOMPARE(unitTestResult.to, expectedToList);
-            QCOMPARE(unitTestResult.cc, expectedCcList);
-            QCOMPARE(unitTestResult.bcc, expectedBccList);
-            switch (expectedCrypto) {
-            case CryptoState::Plain:
-                QCOMPARE(unitTestResult.message->contentType(false)->mimeType(), "text/plain");
-                break;
-
-            case CryptoState::Signed:
-                QCOMPARE(unitTestResult.message->contentType(false)->mimeType(), "multipart/signed");
-                break;
-
-            case CryptoState::Encrypted:
-                QCOMPARE(unitTestResult.message->contentType(false)->mimeType(), "multipart/encrypted");
-                break;
-            }
+            unitTestResult = FakeMessageQueueJob::sUnitTestResults.first();
         }
 
-        if (!FakeITIPHandlerDialogDelegate::expectedWarningTwoActionsCancelDialogs.empty()) {
-            QFAIL("An expected dialog wasn't seen");
+        if (expectedTransportId != -1 && unitTestResult.transportId != expectedTransportId) {
+            qDebug() << "got " << unitTestResult.transportId << "; expected=" << expectedTransportId;
+            QVERIFY(false);
         }
+
+        QCOMPARE(unitTestResult.from, expectedFrom);
+        QCOMPARE(unitTestResult.to, expectedToList);
+        QCOMPARE(unitTestResult.cc, expectedCcList);
+        QCOMPARE(unitTestResult.bcc, expectedBccList);
     }
 
     void testMailOrganizer_data()
@@ -476,19 +253,19 @@
 
         KCalendarCore::IncidenceBase::Ptr incidence(new KCalendarCore::Event());
         KIdentityManagement::Identity identity;
-        const QString from = s_ourEmail;
-        bool bccMe = false;
+        const QString from = QLatin1String(s_ourEmail);
+        bool bccMe;
         QString attachment;
         QString subject = QStringLiteral("subject1");
         QString transport;
         MailClient::Result expectedResult = MailClient::ResultSuccess;
         const int expectedTransportId = 69372773; // from tests/unittestenv/kdehome/share/config/mailtransports
         QString expectedFrom = from; // from tests/unittestenv/kdehome/share/config/emailidentities
-        KCalendarCore::Person organizer(QStringLiteral("Organizer"), s_ourEmail);
+        KCalendarCore::Person organizer(QStringLiteral("Organizer"), QStringLiteral("unittests@dev.nul"));
         incidence->setOrganizer(organizer);
 
         QStringList toList;
-        toList << s_ourEmail;
+        toList << QStringLiteral("unittests@dev.nul");
         QStringList toBccList;
         QString expectedSubject;
         //----------------------------------------------------------------------------------------------
@@ -553,17 +330,17 @@
 
         KCalendarCore::IncidenceBase::Ptr incidence(new KCalendarCore::Event());
         KIdentityManagement::Identity identity;
-        const QString from = s_ourEmail;
-        bool bccMe = false;
-        const QString recipients = s_ourEmail;
+        const QString from = QLatin1String(s_ourEmail);
+        bool bccMe;
+        const QString recipients = QStringLiteral("unittests@dev.nul");
         QString attachment;
         QString transport;
         MailClient::Result expectedResult = MailClient::ResultSuccess;
         const int expectedTransportId = 69372773; // from tests/unittestenv/kdehome/share/config/mailtransports
         QString expectedFrom = from; // from tests/unittestenv/kdehome/share/config/emailidentities
-        KCalendarCore::Person organizer(QStringLiteral("Organizer"), s_ourEmail);
+        KCalendarCore::Person organizer(QStringLiteral("Organizer"), QStringLiteral("unittests@dev.nul"));
         QStringList toList;
-        toList << s_ourEmail;
+        toList << QLatin1String(s_ourEmail);
         QStringList toBccList;
         //----------------------------------------------------------------------------------------------
         QTest::newRow("test1") << incidence << identity << from << bccMe << recipients << attachment << transport << expectedResult << expectedTransportId
diff -ruN akonadi-calendar-23.08.4.orig/cmake/modules/kdepim_add_gpg_crypto_test.cmake akonadi-calendar-23.08.4/cmake/modules/kdepim_add_gpg_crypto_test.cmake
--- akonadi-calendar-23.08.4.orig/cmake/modules/kdepim_add_gpg_crypto_test.cmake	2023-11-22 20:09:08.589108164 +0100
+++ akonadi-calendar-23.08.4/cmake/modules/kdepim_add_gpg_crypto_test.cmake	1970-01-01 01:00:00.000000000 +0100
@@ -1,166 +0,0 @@
-# SPDX-FileCopyrightText: 2013 Sandro Knauß <mail@sandroknauss.de>
-#
-# SPDX-License-Identifier: BSD-3-Clause
-
-set( GNUPGHOME ${CMAKE_SOURCE_DIR}/autotests/gnupg_home )
-
-macro (ADD_GPG_CRYPTO_TEST _target _testname)
-   if (UNIX)
-      if (APPLE)
-         set(_library_path_variable "DYLD_LIBRARY_PATH")
-      elseif (CYGWIN)
-         set(_library_path_variable "PATH")
-      else (APPLE)
-         set(_library_path_variable "LD_LIBRARY_PATH")
-      endif (APPLE)
-
-      if (APPLE)
-         # DYLD_LIBRARY_PATH does not work like LD_LIBRARY_PATH
-         # OSX already has the RPATH in libraries and executables, putting runtime directories in
-         # DYLD_LIBRARY_PATH actually breaks things
-         set(_ld_library_path "${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/")
-      else (APPLE)
-         set(_ld_library_path "${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/:${KDE_INSTALL_LIBDIR}:${QT_LIBRARY_DIR}")
-      endif (APPLE)
-      set(_executable "$<TARGET_FILE:${_target}>")
-
-      # use add_custom_target() to have the sh-wrapper generated during build time instead of cmake time
-      add_custom_command(TARGET ${_target} POST_BUILD
-        COMMAND ${CMAKE_COMMAND}
-        -D_filename=${_executable}.shell -D_library_path_variable=${_library_path_variable}
-        -D_ld_library_path="${_ld_library_path}" -D_executable=$<TARGET_FILE:${_target}>
-        -D_gnupghome="${GNUPGHOME}"
-        -P ${CMAKE_SOURCE_DIR}/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake
-      )
-
-      set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES "${_executable}.shell" )
-      add_test(NAME ${_testname} COMMAND ${_executable}.shell)
-
-   else (UNIX)
-      # under windows, set the property WRAPPER_SCRIPT just to the name of the executable
-      # maybe later this will change to a generated batch file (for setting the PATH so that the Qt libs are found)
-      set(_ld_library_path "${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}\;${KDE_INSTALL_LIBDIR}\;${QT_LIBRARY_DIR}")
-      set(_executable "$<TARGET_FILE:${_target}>")
-
-      # use add_custom_target() to have the batch-file-wrapper generated during build time instead of cmake time
-      add_custom_command(TARGET ${_target} POST_BUILD
-         COMMAND ${CMAKE_COMMAND}
-         -D_filename="${_executable}.bat"
-         -D_ld_library_path="${_ld_library_path}" -D_executable="${_executable}"
-         -D_gnupghome="${GNUPGHOME}"
-         -P ${CMAKE_SOURCE_DIR}/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake
-         )
-
-      add_test(NAME ${_testname} COMMAND ${_executable}.bat)
-
-   endif (UNIX)
-
-   # can't be parallelized due to gpg-agent
-   set_tests_properties(${_testname} PROPERTIES RUN_SERIAL TRUE)
-endmacro (ADD_GPG_CRYPTO_TEST)
-
-macro (ADD_GPG_CRYPTO_AKONADI_TEST _target _testname)
-    set(_executable "$<TARGET_FILE:${_target}>")
-
-    if (UNIX)
-        if (APPLE)
-            set(_library_path_variable "DYLD_LIBRARY_PATH")
-        elseif (CYGWIN)
-            set(_library_path_variable "PATH")
-        else (APPLE)
-            set(_library_path_variable "LD_LIBRARY_PATH")
-        endif (APPLE)
-
-        if (APPLE)
-            # DYLD_LIBRARY_PATH does not work like LD_LIBRARY_PATH
-            # OSX already has the RPATH in libraries and executables, putting runtime directories in
-            # DYLD_LIBRARY_PATH actually breaks things
-            set(_ld_library_path "${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/")
-        else (APPLE)
-            set(_ld_library_path "${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}/:${KDE_INSTALL_LIBDIR}:${QT_LIBRARY_DIR}")
-        endif (APPLE)
-
-        set(_posix "shell")
-        set_property(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES "${_executable}.${_posix}" )
-
-        # use add_custom_target() to have the sh-wrapper generated during build time instead of cmake time
-        add_custom_command(TARGET ${_target} POST_BUILD
-            COMMAND ${CMAKE_COMMAND}
-            -D_filename=${_executable}.${_posix} -D_library_path_variable=${_library_path_variable}
-            -D_ld_library_path="${_ld_library_path}" -D_executable="${_executable}"
-            -D_gnupghome="${GNUPGHOME}"
-            -P ${CMAKE_SOURCE_DIR}/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake
-        )
-
-
-    else (UNIX)
-        # under windows, set the property WRAPPER_SCRIPT just to the name of the executable
-        # maybe later this will change to a generated batch file (for setting the PATH so that the Qt libs are found)
-        set(_ld_library_path "${LIBRARY_OUTPUT_PATH}/${CMAKE_CFG_INTDIR}\;${KDE_INSTALL_LIBDIR}\;${QT_LIBRARY_DIR}")
-        set(_posix "bat")
-
-        # use add_custom_target() to have the batch-file-wrapper generated during build time instead of cmake time
-        add_custom_command(TARGET ${_target} POST_BUILD
-            COMMAND ${CMAKE_COMMAND}
-            -D_filename="${_executable}.${_posix}"
-            -D_ld_library_path="${_ld_library_path}" -D_executable="${_executable}"
-            -D_gnupghome="${GNUPGHOME}"
-            -P ${CMAKE_SOURCE_DIR}/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake
-        )
-
-    endif ()
-
-    if (NOT DEFINED _testrunner)
-        find_program(_testrunner NAMES akonaditest akonaditest.exe)
-        if (NOT _testrunner)
-            message(WARNING "Could not locate akonaditest executable, isolated Akonadi tests will fail!")
-        endif()
-    endif()
-
-    function(_defineTest name backend)
-        set(backends ${ARGN})
-        if (NOT DEFINED AKONADI_RUN_${backend}_ISOLATED_TESTS OR AKONADI_RUN_${backend}_ISOLATED_TESTS)
-            LIST(LENGTH "${backends}" backendsLen)
-            string(TOLOWER ${backend} lcbackend)
-            LIST(FIND "${backends}" ${lcbackend} enableBackend)
-            if (${backendsLen} EQUAL 0 OR ${enableBackend} GREATER -1)
-                set(configFile ${CMAKE_CURRENT_SOURCE_DIR}/unittestenv/config.xml)
-                if (AKONADI_TESTS_XML)
-                    set(extraOptions -xml -o "${TEST_RESULT_OUTPUT_PATH}/${lcbackend}-${name}.xml")
-                endif()
-                set(_test_name akonadi-${lcbackend}-${name})
-                add_test(NAME ${_test_name}
-                            COMMAND ${_testrunner} -c "${configFile}" -b ${lcbackend}
-                                    "${_executable}.${_posix}" ${extraOptions}
-                )
-                # Taken from ECMAddTests.cmake
-                if (CMAKE_LIBRARY_OUTPUT_DIRECTORY)
-                    if(CMAKE_HOST_SYSTEM MATCHES "Windows")
-                        set(PATHSEP ";")
-                    else() # e.g. Linux
-                        set(PATHSEP ":")
-                    endif()
-                    set(_plugin_path $ENV{QT_PLUGIN_PATH})
-                    set(_test_env
-                        QT_PLUGIN_PATH=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}${PATHSEP}$ENV{QT_PLUGIN_PATH}
-                        LD_LIBRARY_PATH=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}${PATHSEP}$ENV{LD_LIBRARY_PATH}
-                    )
-                    set_tests_properties(${_test_name} PROPERTIES ENVIRONMENT "${_test_env}")
-                endif()
-                set_tests_properties(${_test_name} PROPERTIES RUN_SERIAL TRUE) # can't be parallelized due to gpg-agent
-            endif()
-        endif()
-    endfunction()
-
-    find_program(MYSQLD_EXECUTABLE mysqld /usr/sbin /usr/local/sbin /usr/libexec /usr/local/libexec /opt/mysql/libexec /usr/mysql/bin)
-    if (MYSQLD_EXECUTABLE AND NOT WIN32)
-        _defineTest(${_testname} "MYSQL" ${CONFIG_BACKENDS})
-    endif()
-
-    find_program(POSTGRES_EXECUTABLE postgres)
-    if (POSTGRES_EXECUTABLE AND NOT WIN32)
-        _defineTest(${_testname} "PGSQL" ${CONFIG_BACKENDS})
-    endif()
-
-    _defineTest(${_testname} "SQLITE" ${CONFIG_BACKENDS})
-endmacro (ADD_GPG_CRYPTO_AKONADI_TEST)
diff -ruN akonadi-calendar-23.08.4.orig/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake akonadi-calendar-23.08.4/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake
--- akonadi-calendar-23.08.4.orig/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake	2023-11-22 20:09:08.589108164 +0100
+++ akonadi-calendar-23.08.4/cmake/modules/kdepim_generate_crypto_test_wrapper.cmake	1970-01-01 01:00:00.000000000 +0100
@@ -1,57 +0,0 @@
-# SPDX-FileCopyrightText: 2006 Alexander Neundorf <neundorf@kde.org>
-# SPDX-FileCopyrightText: 2013 Sandro Knauß <mail@sandroknauss.de>
-#
-# SPDX-License-Identifier: BSD-3-Clause
-
-
-if (UNIX)
-
-file(WRITE "${_filename}"
-"#!/bin/sh
-# created by cmake, don't edit, changes will be lost
-
-# don't mess with a gpg-agent already running on the system
-unset GPG_AGENT_INFO
-
-# _gnupghome will contain a socket, and the path to that has a length limit of 108 chars
-# which that is easily reached. Therefore shorten this by copying this to a temporary dir.
-# This has the convenient side-effect that modifications to the content are not propagated
-# to other tests.
-tmp_dir=`mktemp -d -t messagelib-test-gnupg-home.XXXXXXXX` || exit 1
-cp -rf ${_gnupghome}/* $tmp_dir
-
-${_library_path_variable}=${_ld_library_path}\${${_library_path_variable}:+:\$${_library_path_variable}} GNUPGHOME=$tmp_dir \"${_executable}\" \"$@\"
-_result=$?
-
-_pid=`echo GETINFO pid | GNUPGHOME=$tmp_dir gpg-connect-agent | grep 'D' | cut -d' ' -f2`
-if [ ! -z \"\$_pid\" ]; then
-    echo KILLAGENT | GNUPGHOME=$tmp_dir gpg-connect-agent > /dev/null
-    sleep .3
-    if ps -p \"\$_pid\" > /dev/null; then
-       echo \"Waiting for gpg-agent to terminate (PID: $_pid)...\"
-       while kill -0 \"\$_pid\"; do
-           sleep 1
-       done
-    fi
-fi
-rm -rf $tmp_dir
-exit \$_result
-")
-
-# make it executable
-# since this is only executed on UNIX, it is safe to call chmod
-exec_program(chmod ARGS ug+x \"${_filename}\" OUTPUT_VARIABLE _dummy )
-
-else (UNIX)
-
-file(TO_NATIVE_PATH "${_ld_library_path}" win_path)
-file(TO_NATIVE_PATH "${_gnupghome}" win_gnupghome)
-
-file(WRITE "${_filename}"
-"
-set PATH=${win_path};$ENV{PATH}
-set GNUPGHOME=${win_gnupghome};$ENV{GNUPGHOME}
-gpg-agent --daemon \"${_executable}\" %*
-")
-
-endif (UNIX)
diff -ruN akonadi-calendar-23.08.4.orig/.kde-ci.yml akonadi-calendar-23.08.4/.kde-ci.yml
--- akonadi-calendar-23.08.4.orig/.kde-ci.yml	2023-11-22 20:09:08.589108164 +0100
+++ akonadi-calendar-23.08.4/.kde-ci.yml	2023-11-22 20:09:11.900759398 +0100
@@ -15,7 +15,6 @@
     'pim/kcalutils' : '@same'
     'pim/kidentitymanagement' : '@same'
     'pim/kmailtransport' : '@same'
-    'pim/messagelib' : '@same'
 
 Options:
   require-passing-tests-on: [ 'Linux', 'FreeBSD' ]      
diff -ruN akonadi-calendar-23.08.4.orig/src/CMakeLists.txt akonadi-calendar-23.08.4/src/CMakeLists.txt
--- akonadi-calendar-23.08.4.orig/src/CMakeLists.txt	2023-11-22 20:09:08.609106058 +0100
+++ akonadi-calendar-23.08.4/src/CMakeLists.txt	2023-11-22 20:10:21.697409044 +0100
@@ -122,9 +122,6 @@
     KPim${KF_MAJOR_VERSION}::AkonadiWidgets
     KPim${KF_MAJOR_VERSION}::MailTransport
     KPim${KF_MAJOR_VERSION}::Mime
-    KPim${KF_MAJOR_VERSION}::MessageCore
-    KPim${KF_MAJOR_VERSION}::MessageComposer
-    KPim${KF_MAJOR_VERSION}::Libkleo
 )
 
 set_target_properties(KPim${KF_MAJOR_VERSION}AkonadiCalendar PROPERTIES
diff -ruN akonadi-calendar-23.08.4.orig/src/CMakeLists.txt.orig akonadi-calendar-23.08.4/src/CMakeLists.txt.orig
--- akonadi-calendar-23.08.4.orig/src/CMakeLists.txt.orig	1970-01-01 01:00:00.000000000 +0100
+++ akonadi-calendar-23.08.4/src/CMakeLists.txt.orig	2023-11-22 20:09:11.896759820 +0100
@@ -0,0 +1,205 @@
+# SPDX-FileCopyrightText: none
+# SPDX-License-Identifier: BSD-3-Clause
+
+add_definitions(-DTRANSLATION_DOMAIN=\"libakonadi-calendar5\")
+
+add_library(KPim${KF_MAJOR_VERSION}AkonadiCalendar)
+add_library(KPim${KF_MAJOR_VERSION}::AkonadiCalendar ALIAS KPim${KF_MAJOR_VERSION}AkonadiCalendar)
+
+target_sources(KPim${KF_MAJOR_VERSION}AkonadiCalendar PRIVATE
+    blockalarmsattribute.cpp
+    blockalarmsattribute.h
+    calendarbase.cpp
+    calendarbase.h
+    calendarbase_p.h
+    calendarclipboard.cpp
+    calendarclipboard.h
+    calendarclipboard_p.h
+    calendarmodel.cpp
+    calendarmodel_p.h
+    calendarutils.cpp
+    calendarutils.h
+    calfilterpartstatusproxymodel_p.cpp
+    calfilterpartstatusproxymodel_p.h
+    calfilterproxymodel_p.cpp
+    calfilterproxymodel_p.h
+    etmcalendar.cpp
+    etmcalendar.h
+    etmcalendar_p.h
+    fetchjobcalendar.cpp
+    fetchjobcalendar.h
+    fetchjobcalendar_p.h
+    freebusydownloadjob_p.cpp
+    freebusydownloadjob_p.h
+    freebusymanager.cpp
+    freebusymanager.h
+    freebusymanager_p.h
+    freebusyproviderbase.cpp
+    freebusyproviderbase.h
+    freebusyproviderbase_p.h
+    history.cpp
+    history.h
+    history_p.cpp
+    history_p.h
+    icalimporter.cpp
+    icalimporter.h
+    icalimporter_p.h
+    incidencechanger.cpp
+    incidencechanger.h
+    incidencechanger_p.cpp
+    incidencechanger_p.h
+    incidencefetchjob_p.cpp
+    incidencefetchjob_p.h
+    incidencetreemodel.cpp
+    incidencetreemodel.h
+    incidencetreemodel_p.h
+    itiphandler.cpp
+    itiphandler.h
+    itiphandlerhelper_p.cpp
+    itiphandlerhelper_p.h
+    itiphandler_p.cpp
+    itiphandler_p.h
+    kcolumnfilterproxymodel.cpp
+    kcolumnfilterproxymodel_p.h
+    mailclient_p.cpp
+    mailclient_p.h
+    mailscheduler_p.cpp
+    mailscheduler_p.h
+    publishdialog.cpp
+    publishdialog.h
+    publishdialog_p.cpp
+    publishdialog_p.h
+    scheduler_p.cpp
+    scheduler_p.h
+    searchcollectionhelper.cpp
+    searchcollectionhelper.h
+    standardcalendaractionmanager.cpp
+    standardcalendaractionmanager.h
+    todomodel.cpp
+    todomodel.h
+    todopurger.cpp
+    todopurger.h
+    todopurger_p.h
+    utils_p.cpp
+    utils_p.h
+)
+
+ecm_qt_declare_logging_category(KPim${KF_MAJOR_VERSION}AkonadiCalendar HEADER akonadicalendar_debug.h IDENTIFIER AKONADICALENDAR_LOG CATEGORY_NAME org.kde.pim.akonadicalendar
+        DESCRIPTION "akonadicalendar (pim lib)"
+        OLD_CATEGORY_NAMES log_akonadicalendar
+        EXPORT AKONADI-CALENDAR
+    )
+
+kconfig_add_kcfg_files(KPim${KF_MAJOR_VERSION}AkonadiCalendar GENERATE_MOC calendarsettings.kcfgc)
+ki18n_wrap_ui(akonadicalendar_LIB_SRC publishdialog_base.ui)
+
+qt_add_dbus_adaptor( akonadicalendar_LIB_SRC interfaces/org.freedesktop.Akonadi.Resource.FreeBusyProvider.xml freebusyproviderbase_p.h Akonadi::FreeBusyProviderBasePrivate freebusyprovideradaptor  Akonadi__FreeBusyProviderAdaptor )
+target_sources(KPim${KF_MAJOR_VERSION}AkonadiCalendar PRIVATE ${akonadicalendar_LIB_SRC})
+if (COMPILE_WITH_UNITY_CMAKE_SUPPORT)
+    set_target_properties(KPim${KF_MAJOR_VERSION}AkonadiCalendar PROPERTIES UNITY_BUILD ON)
+endif()
+generate_export_header(KPim${KF_MAJOR_VERSION}AkonadiCalendar BASE_NAME akonadi-calendar)
+
+
+target_include_directories(KPim${KF_MAJOR_VERSION}AkonadiCalendar INTERFACE "$<INSTALL_INTERFACE:${KDE_INSTALL_INCLUDEDIR}/KPim${KF_MAJOR_VERSION}/AkonadiCalendar>")
+target_include_directories(KPim${KF_MAJOR_VERSION}AkonadiCalendar PUBLIC "$<BUILD_INTERFACE:${Akonadi-Calendar_SOURCE_DIR}/src;${Akonadi-Calendar_BINARY_DIR}/src>")
+
+target_link_libraries(KPim${KF_MAJOR_VERSION}AkonadiCalendar
+PUBLIC
+    KPim${KF_MAJOR_VERSION}::AkonadiCore
+    KF${KF_MAJOR_VERSION}::CalendarCore
+    KF${KF_MAJOR_VERSION}::WidgetsAddons
+    KF${KF_MAJOR_VERSION}::I18n
+    KPim${KF_MAJOR_VERSION}::IdentityManagement
+PRIVATE
+    KF${KF_MAJOR_VERSION}::Codecs
+    KF${KF_MAJOR_VERSION}::KIOCore
+    KF${KF_MAJOR_VERSION}::JobWidgets
+    KF${KF_MAJOR_VERSION}::XmlGui
+    KPim${KF_MAJOR_VERSION}::AkonadiContact
+    KPim${KF_MAJOR_VERSION}::AkonadiMime
+    KPim${KF_MAJOR_VERSION}::CalendarUtils
+    KPim${KF_MAJOR_VERSION}::AkonadiWidgets
+    KPim${KF_MAJOR_VERSION}::MailTransport
+    KPim${KF_MAJOR_VERSION}::Mime
+    KPim${KF_MAJOR_VERSION}::MessageCore
+    KPim${KF_MAJOR_VERSION}::MessageComposer
+    KPim${KF_MAJOR_VERSION}::Libkleo
+)
+
+set_target_properties(KPim${KF_MAJOR_VERSION}AkonadiCalendar PROPERTIES
+    VERSION ${AKONADICALENDAR_VERSION}
+    SOVERSION ${AKONADICALENDAR_SOVERSION}
+    EXPORT_NAME AkonadiCalendar
+)
+
+ecm_generate_pri_file(BASE_NAME AkonadiCalendar
+    LIB_NAME KPim${KF_MAJOR_VERSION}AkonadiCalendar
+    DEPS "AkonadiCore KCalendarCore" FILENAME_VAR PRI_FILENAME
+)
+
+install(FILES ${PRI_FILENAME} DESTINATION ${ECM_MKSPECS_INSTALL_DIR})
+
+install(TARGETS
+    KPim${KF_MAJOR_VERSION}AkonadiCalendar
+    EXPORT KPim${KF_MAJOR_VERSION}AkonadiCalendarTargets ${KDE_INSTALL_TARGETS_DEFAULT_ARGS}
+)
+
+ecm_generate_headers(AkonadiCalendar_CamelCase_HEADERS
+  HEADER_NAMES
+  BlockAlarmsAttribute
+  CalendarBase
+  CalendarClipboard
+  CalendarUtils
+  ETMCalendar
+  FetchJobCalendar
+  FreeBusyManager
+  FreeBusyProviderBase
+  History
+  ICalImporter
+  IncidenceChanger
+  IncidenceTreeModel
+  ITIPHandler
+  PublishDialog
+  StandardCalendarActionManager
+  SearchCollectionHelper
+  TodoModel
+  TodoPurger
+  REQUIRED_HEADERS AkonadiCalendar_HEADERS
+  PREFIX Akonadi
+)
+
+install( FILES
+  ${AkonadiCalendar_CamelCase_HEADERS}
+  DESTINATION ${KDE_INSTALL_INCLUDEDIR}/KPim${KF_MAJOR_VERSION}/AkonadiCalendar/Akonadi COMPONENT Devel
+)
+install( FILES
+  ${CMAKE_CURRENT_BINARY_DIR}/akonadi-calendar_export.h
+  ${AkonadiCalendar_HEADERS}
+  ${CMAKE_CURRENT_BINARY_DIR}/calendarsettings.h
+  DESTINATION ${KDE_INSTALL_INCLUDEDIR}/KPim${KF_MAJOR_VERSION}/AkonadiCalendar/akonadi COMPONENT Devel
+)
+
+
+if (BUILD_QCH)
+    ecm_add_qch(
+        KPim${KF_MAJOR_VERSION}AkonadiCalendar_QCH
+        NAME AkonadiCalendar
+        BASE_NAME KPim${KF_MAJOR_VERSION}AkonadiCalendar
+        VERSION ${PIM_VERSION}
+        ORG_DOMAIN org.kde
+        SOURCES # using only public headers, to cover only public API
+            ${AkonadiCalendar_HEADERS}
+        MD_MAINPAGE "${CMAKE_SOURCE_DIR}/README.md"
+        #IMAGE_DIRS "${CMAKE_SOURCE_DIR}/docs/pics"
+        LINK_QCHS
+            Qt${QT_MAJOR_VERSION}Core_QCH
+        INCLUDE_DIRS
+            ${CMAKE_CURRENT_BINARY_DIR}
+        BLANK_MACROS
+            AKONADI_CALENDAR_EXPORT
+        TAGFILE_INSTALL_DESTINATION ${KDE_INSTALL_QTQCHDIR}
+        QCH_INSTALL_DESTINATION ${KDE_INSTALL_QTQCHDIR}
+        COMPONENT Devel
+    )
+endif()
diff -ruN akonadi-calendar-23.08.4.orig/src/itiphandler.h akonadi-calendar-23.08.4/src/itiphandler.h
--- akonadi-calendar-23.08.4.orig/src/itiphandler.h	2023-11-22 20:09:08.605106479 +0100
+++ akonadi-calendar-23.08.4/src/itiphandler.h	2023-11-22 20:09:11.896759820 +0100
@@ -20,7 +20,6 @@
 
 #include <KGuiItem>
 #include <KLocalizedString>
-#include <KStandardGuiItem>
 
 #include <QObject>
 #include <QString>
@@ -79,8 +78,6 @@
         Attendees /**< the attendees of the incidence */
     };
 
-    enum DialogAction { OkAction = 1, CancelAction = 2, PrimaryAction = 3, SecondaryAction = 4, ContinueAction = 5 };
-
     /**
      * Creates a new AskDelegator
      */
@@ -149,33 +146,6 @@
                                              const KGuiItem &buttonYes = KGuiItem(i18nc("@action:button dialog positive answer", "Send Email")),
                                              const KGuiItem &buttonNo = KGuiItem(i18nc("@action:button dialog negative answer", "Do Not Send")));
 
-    /**
-     * Opens a warning message box with two accept actions and cancel action.
-     * @param text: dialog's text
-     * @param title: dialog's title
-     * @param primaryAction: dialog's primary action
-     * @param secondaryAction: dialog's secondary action
-     * @param cancelAction: dialog's cancel action
-     * @returns The button clicked by the user (KMessageBox::ButtonCode)
-     */
-    virtual int warningTwoActionsCancel(const QString &text,
-                                        const QString &title,
-                                        const KGuiItem &primaryAction,
-                                        const KGuiItem &secondaryAction,
-                                        const KGuiItem &cancelAction = KStandardGuiItem::cancel());
-    /**
-     * Opens a warning message box with a Continue and Cancel actions
-     * @param text: dialog's text
-     * @param title: dialog's title
-     * @param buttonContinue: dialog's continue answer
-     * @param buttonCancel: dialog's cancel answer.
-     * @returns The button clicked by the user (KMessageBox::ButtonCode)
-     */
-    virtual int warningContinueCancel(const QString &text,
-                                      const QString &title,
-                                      const KGuiItem &buttonContinue = KStandardGuiItem::cont(),
-                                      const KGuiItem &buttonCancel = KStandardGuiItem::cancel());
-
 Q_SIGNALS:
     /*
      * Signal is emitted, when the user has answered the dialog or the defaultAction is used
diff -ruN akonadi-calendar-23.08.4.orig/src/itiphandlerhelper_p.cpp akonadi-calendar-23.08.4/src/itiphandlerhelper_p.cpp
--- akonadi-calendar-23.08.4.orig/src/itiphandlerhelper_p.cpp	2023-11-22 20:09:08.609106058 +0100
+++ akonadi-calendar-23.08.4/src/itiphandlerhelper_p.cpp	2023-11-22 20:09:58.219881431 +0100
@@ -109,20 +109,6 @@
     Q_EMIT dialogClosed(messageBoxReturnCode, mMethod, mIncidence);
 }
 
-int ITIPHandlerDialogDelegate::warningContinueCancel(const QString &text, const QString &title, const KGuiItem &buttonContinue, const KGuiItem &buttonCancel)
-{
-    return KMessageBox::warningContinueCancel(mParent, text, title, buttonContinue, buttonCancel);
-}
-
-int ITIPHandlerDialogDelegate::warningTwoActionsCancel(const QString &text,
-                                                       const QString &title,
-                                                       const KGuiItem &primaryAction,
-                                                       const KGuiItem &secondaryAction,
-                                                       const KGuiItem &cancelAction)
-{
-    return KMessageBox::warningTwoActionsCancel(mParent, text, title, primaryAction, secondaryAction, cancelAction);
-}
-
 ITIPHandlerHelper::SendResult ITIPHandlerHelper::sentInvitation(int messageBoxReturnCode,
                                                                 const KCalendarCore::Incidence::Ptr &incidence,
                                                                 KCalendarCore::iTIPMethod method,
diff -ruN akonadi-calendar-23.08.4.orig/src/mailclient_p.cpp akonadi-calendar-23.08.4/src/mailclient_p.cpp
--- akonadi-calendar-23.08.4.orig/src/mailclient_p.cpp	2023-11-22 20:09:08.605106479 +0100
+++ akonadi-calendar-23.08.4/src/mailclient_p.cpp	2023-11-22 20:09:11.900759398 +0100
@@ -17,344 +17,18 @@
 #include <KCalendarCore/Incidence>
 #include <KEmailAddress>
 #include <KIdentityManagement/Identity>
-#include <MessageComposer/ContactPreference>
 
 #include <Akonadi/MessageQueueJob>
 #include <MailTransport/Transport>
 #include <MailTransport/TransportManager>
 
-#include <KMime/Headers>
-
-#include <QGpgME/ExportJob>
-#include <QGpgME/ImportJob>
-#include <QGpgME/Protocol>
-#include <gpgme++/context.h>
-#include <gpgme++/importresult.h>
-
-#include <MessageComposer/Composer>
-#include <MessageComposer/GlobalPart>
-#include <MessageComposer/InfoPart>
-#include <MessageComposer/ItipPart>
-#include <MessageComposer/KeyResolver>
-#include <MessageComposer/MessageComposerSettings>
-#include <MessageComposer/Util>
-#include <MessageCore/AutocryptStorage>
-
-#include <Libkleo/Enum>
-#include <Libkleo/ExpiryChecker>
-#include <Libkleo/ExpiryCheckerSettings>
-
 #include "akonadicalendar_debug.h"
 #include <KJob>
 #include <KLocalizedString>
-#include <KMessageBox>
 #include <KProtocolManager>
 
-#include <QTemporaryDir>
-
 using namespace Akonadi;
 
-// Crypto-related helpers
-static Kleo::chrono::days encryptOwnKeyNearExpiryWarningThresholdInDays()
-{
-    if (!MessageComposer::MessageComposerSettings::self()->cryptoWarnWhenNearExpire()) {
-        return Kleo::chrono::days{-1};
-    }
-    const int num = MessageComposer::MessageComposerSettings::self()->cryptoWarnOwnEncrKeyNearExpiryThresholdDays();
-    return Kleo::chrono::days{qMax(1, num)};
-}
-
-static Kleo::chrono::days encryptKeyNearExpiryWarningThresholdInDays()
-{
-    if (!MessageComposer::MessageComposerSettings::self()->cryptoWarnWhenNearExpire()) {
-        return Kleo::chrono::days{-1};
-    }
-    const int num = MessageComposer::MessageComposerSettings::self()->cryptoWarnEncrKeyNearExpiryThresholdDays();
-    return Kleo::chrono::days{qMax(1, num)};
-}
-
-static Kleo::chrono::days encryptRootCertNearExpiryWarningThresholdInDays()
-{
-    if (!MessageComposer::MessageComposerSettings::self()->cryptoWarnWhenNearExpire()) {
-        return Kleo::chrono::days{-1};
-    }
-    const int num = MessageComposer::MessageComposerSettings::self()->cryptoWarnEncrRootNearExpiryThresholdDays();
-    return Kleo::chrono::days{qMax(1, num)};
-}
-
-static Kleo::chrono::days encryptChainCertNearExpiryWarningThresholdInDays()
-{
-    if (!MessageComposer::MessageComposerSettings::self()->cryptoWarnWhenNearExpire()) {
-        return Kleo::chrono::days{-1};
-    }
-    const int num = MessageComposer::MessageComposerSettings::self()->cryptoWarnEncrChaincertNearExpiryThresholdDays();
-    return Kleo::chrono::days{qMax(1, num)};
-}
-
-static bool cryptoWarningUnsigned(const KIdentityManagement::Identity &identity)
-{
-    if (identity.encryptionOverride()) {
-        return identity.warnNotSign();
-    }
-    return MessageComposer::MessageComposerSettings::self()->cryptoWarningUnsigned();
-}
-
-static bool cryptoWarningUnencrypted(const KIdentityManagement::Identity &identity)
-{
-    if (identity.encryptionOverride()) {
-        return identity.warnNotEncrypt();
-    }
-    return MessageComposer::MessageComposerSettings::self()->cryptoWarningUnencrypted();
-}
-
-static QStringList extractEmailAndNormalize(const QString &email)
-{
-    const QStringList splittedEmail = KEmailAddress::splitAddressList(email);
-    QStringList normalizedEmail;
-    normalizedEmail.reserve(splittedEmail.count());
-    for (const QString &email : splittedEmail) {
-        const QString str = KEmailAddress::extractEmailAddress(KEmailAddress::normalizeAddressesAndEncodeIdn(email));
-        normalizedEmail << str;
-    }
-    return normalizedEmail;
-}
-
-void MailClient::setAkonadiLookupEnabled(bool enabled)
-{
-    mAkonadiLookupEnabled = enabled;
-}
-
-std::optional<MessageComposer::ContactPreference> MailClient::contactPreference(const QString &address)
-{
-    Q_UNUSED(address);
-    return {};
-}
-
-void MailClient::populateKeyResolverContactsPreferences(Kleo::KeyResolver &keyResolver, const QStringList &addresses)
-{
-    for (const auto &address : addresses) {
-        if (const auto &pref = contactPreference(address); pref.has_value()) {
-            keyResolver.setContactPreferences(address, *pref);
-        }
-    }
-}
-
-static bool populateKeyResolverEncryptionKeys(Kleo::KeyResolver &keyResolver, const KIdentityManagement::Identity &identity)
-{
-    QStringList encryptToSelfKeys;
-    if (!identity.pgpEncryptionKey().isEmpty()) {
-        encryptToSelfKeys.push_back(QString::fromLatin1(identity.pgpEncryptionKey()));
-    }
-    if (!identity.smimeEncryptionKey().isEmpty()) {
-        encryptToSelfKeys.push_back(QString::fromLatin1(identity.smimeEncryptionKey()));
-    }
-    if (const auto result = keyResolver.setEncryptToSelfKeys(encryptToSelfKeys); result != Kleo::Ok) {
-        qCWarning(AKONADICALENDAR_LOG) << "KeyResolver - failed to set encrypto-to-self keys, result:" << result;
-        return false;
-    }
-
-    return true;
-}
-
-static bool populateKeyResolverSigningKeys(Kleo::KeyResolver &keyResolver, const KIdentityManagement::Identity &identity)
-{
-    QStringList signingKeys;
-    if (!identity.pgpSigningKey().isEmpty()) {
-        signingKeys.push_back(QString::fromLatin1(identity.pgpSigningKey()));
-    }
-    if (!identity.smimeSigningKey().isEmpty()) {
-        signingKeys.push_back(QString::fromLatin1(identity.smimeSigningKey()));
-    }
-    qCDebug(AKONADICALENDAR_LOG) << "Settings signing keys:" << signingKeys;
-    if (const auto result = keyResolver.setSigningKeys(signingKeys); result != Kleo::Ok) {
-        qCWarning(AKONADICALENDAR_LOG) << "KeyResolver - failed to set signing keys, result:" << result;
-        return false;
-    }
-
-    return true;
-}
-
-std::vector<std::unique_ptr<MessageComposer::Composer>>
-MailClient::buildComposers(const KCalendarCore::IncidenceBase::Ptr &incidence, const KIdentityManagement::Identity &identity, const MessageData &msg)
-{
-    // TODO: Those should be set based on whether the user selects "Sign" or "Encrypt" options
-    // in the incidence editor (similar to the "Sign" and "Encrypt" actions in KMail composer).
-    // Right now we do NOT have those actions in the UI, so we keep the values to false so that
-    // signing/encryption depends purely on current identity and attendee signing and encryption
-    // preferences.
-    const bool doSignCompletely = false;
-    const bool doEncryptCompletely = false;
-
-    std::unique_ptr<ITIPHandlerDialogDelegate> dialogDelegate(
-        mFactory->createITIPHanderDialogDelegate(qSharedPointerCast<KCalendarCore::Incidence>(incidence), KCalendarCore::iTIPMethod::iTIPNoMethod));
-
-    auto expiryChecker = std::make_shared<Kleo::ExpiryChecker>(Kleo::ExpiryCheckerSettings{encryptOwnKeyNearExpiryWarningThresholdInDays(),
-                                                                                           encryptKeyNearExpiryWarningThresholdInDays(),
-                                                                                           encryptRootCertNearExpiryWarningThresholdInDays(),
-                                                                                           encryptChainCertNearExpiryWarningThresholdInDays()});
-    Kleo::KeyResolver keyResolver(/* encToSelf */ true, showKeyApprovalDialog(), identity.pgpAutoEncrypt(), Kleo::AutoFormat, expiryChecker);
-
-    const auto recipients = msg.to + msg.cc;
-    populateKeyResolverContactsPreferences(keyResolver, recipients);
-
-    keyResolver.setAkonadiLookupEnabled(mAkonadiLookupEnabled);
-    keyResolver.setAutocryptEnabled(identity.autocryptEnabled());
-    keyResolver.setPrimaryRecipients(recipients);
-    if (msg.bccMe) {
-        keyResolver.setSecondaryRecipients({msg.from});
-    }
-
-    if (!populateKeyResolverEncryptionKeys(keyResolver, identity)) {
-        return {};
-    }
-    if (!populateKeyResolverSigningKeys(keyResolver, identity)) {
-        return {};
-    }
-
-    bool signSomething = !identity.pgpSigningKey().isEmpty() && identity.pgpAutoSign();
-    bool encryptSomething = !identity.pgpEncryptionKey().isEmpty() && identity.pgpAutoEncrypt();
-    bool result = true;
-    bool canceled = false;
-    bool signAttachments = false;
-    bool encryptAttachments = false;
-
-    signSomething = determineWhetherToSign(doSignCompletely, &keyResolver, dialogDelegate.get(), identity, signSomething, signAttachments, result, canceled);
-    if (!result) {
-        qCDebug(AKONADICALENDAR_LOG) << "KeyResolver failed to resolve signing keys - " << (canceled ? "operation canceled" : "an error occured");
-        return {};
-    }
-
-    encryptSomething = determineWhetherToEncrypt(doEncryptCompletely,
-                                                 &keyResolver,
-                                                 dialogDelegate.get(),
-                                                 identity,
-                                                 encryptSomething,
-                                                 signSomething,
-                                                 encryptAttachments,
-                                                 result,
-                                                 canceled);
-    if (!result) {
-        qCDebug(AKONADICALENDAR_LOG) << "KeyResolver failed to resolve encryption keys - " << (canceled ? "operation canceled" : "an error occured");
-        return {};
-    }
-
-    std::vector<std::unique_ptr<MessageComposer::Composer>> composers;
-
-    if (!signSomething && !encryptSomething) {
-        auto &composer = composers.emplace_back(std::make_unique<MessageComposer::Composer>());
-        const auto preferredCrypto = Kleo::stringToCryptoMessageFormat(identity.preferredCryptoMessageFormat());
-        if (preferredCrypto & Kleo::OpenPGPMIMEFormat) {
-            composer->setAutocryptEnabled(identity.autocryptEnabled());
-            if (keyResolver.encryptToSelfKeysFor(Kleo::OpenPGPMIMEFormat).size() > 0) {
-                composer->setSenderEncryptionKey(keyResolver.encryptToSelfKeysFor(Kleo::OpenPGPMIMEFormat)[0]);
-            }
-        }
-        return composers;
-    }
-
-    canceled = false;
-    const Kleo::Result kpgpResult = keyResolver.resolveAllKeys(signSomething, encryptSomething);
-    if (kpgpResult == Kleo::Canceled || canceled) {
-        qCDebug(AKONADICALENDAR_LOG) << "resolveAllKeys: one key resolution canceled by user";
-        return {};
-    } else if (kpgpResult != Kleo::Ok) {
-        // TODO handle failure
-        qCDebug(AKONADICALENDAR_LOG) << "resolveAllKeys: failed to resolve keys! oh noes";
-        return {};
-    }
-
-    if (encryptSomething || signSomething) {
-        for (auto concreteFormat : {Kleo::OpenPGPMIMEFormat, Kleo::SMIMEFormat, Kleo::SMIMEOpaqueFormat, Kleo::InlineOpenPGPFormat}) {
-            const auto encData = keyResolver.encryptionItems(concreteFormat);
-            if (encData.empty()) {
-                continue;
-            }
-
-            if (!(concreteFormat & Kleo::AutoFormat)) {
-                continue;
-            }
-
-            auto composer = std::make_unique<MessageComposer::Composer>();
-
-            if (encryptSomething || identity.autocryptEnabled()) {
-                QVector<QPair<QStringList, std::vector<GpgME::Key>>> data;
-                data.reserve(encData.size());
-                for (const auto &info : encData) {
-                    data.push_back(qMakePair(info.recipients, info.keys));
-                    qCDebug(AKONADICALENDAR_LOG) << "Resolved keys for:" << info.recipients;
-                }
-                composer->setEncryptionKeys(data);
-                if (concreteFormat & Kleo::OpenPGPMIMEFormat && identity.autocryptEnabled()) {
-                    composer->setAutocryptEnabled(true);
-                    composer->setSenderEncryptionKey(keyResolver.encryptToSelfKeysFor(concreteFormat)[0]);
-                    QTemporaryDir dir;
-                    bool specialGnupgHome = addKeysToContext(dir.path(), data, keyResolver.useAutocrypt());
-                    if (specialGnupgHome) {
-                        dir.setAutoRemove(false);
-                        composer->setGnupgHome(dir.path());
-                    }
-                }
-            }
-
-            if (signSomething) {
-                // find signing keys for this format
-                composer->setSigningKeys(keyResolver.signingKeys(concreteFormat));
-            }
-
-            composer->setMessageCryptoFormat(concreteFormat);
-            composer->setSignAndEncrypt(signSomething, encryptSomething);
-
-            composers.push_back(std::move(composer));
-        }
-    } else {
-        composers.emplace_back(std::make_unique<MessageComposer::Composer>());
-    }
-
-    return composers;
-}
-
-void MailClient::queueMessage(const MailTransport::Transport *transport,
-                              const MessageComposer::Composer *composer,
-                              const KCalendarCore::IncidenceBase::Ptr &incidence,
-                              const KIdentityManagement::Identity &identity,
-                              const MessageData &msg,
-                              const KMime::Message::Ptr &message)
-{
-    Akonadi::MessageQueueJob *qjob = mFactory->createMessageQueueJob(incidence, identity, this);
-    qjob->setMessage(message);
-
-    if (identity.disabledFcc()) {
-        qjob->sentBehaviourAttribute().setSentBehaviour(Akonadi::SentBehaviourAttribute::Delete);
-    } else {
-        const Akonadi::Collection sentCollection(identity.fcc().toLongLong());
-        if (sentCollection.isValid()) {
-            qjob->sentBehaviourAttribute().setSentBehaviour(Akonadi::SentBehaviourAttribute::MoveToCollection);
-            qjob->sentBehaviourAttribute().setMoveToCollection(sentCollection);
-        } else {
-            qjob->sentBehaviourAttribute().setSentBehaviour(Akonadi::SentBehaviourAttribute::MoveToDefaultSentCollection);
-        }
-    }
-
-    qjob->transportAttribute().setTransportId(transport->id());
-
-    if (transport && transport->specifySenderOverwriteAddress()) {
-        qjob->addressAttribute().setFrom(
-            KEmailAddress::extractEmailAddress(KEmailAddress::normalizeAddressesAndEncodeIdn(transport->senderOverwriteAddress())));
-    } else {
-        qjob->addressAttribute().setFrom(KEmailAddress::extractEmailAddress(KEmailAddress::normalizeAddressesAndEncodeIdn(composer->infoPart()->from())));
-    }
-
-    qjob->addressAttribute().setTo(MessageComposer::Util::cleanUpEmailListAndEncoding(composer->infoPart()->to()));
-    qjob->addressAttribute().setCc(MessageComposer::Util::cleanUpEmailListAndEncoding(composer->infoPart()->cc()));
-    if (msg.bccMe) {
-        qjob->addressAttribute().setBcc({qjob->addressAttribute().from()});
-    }
-
-    message->assemble();
-    connect(qjob, &KJob::finished, this, &MailClient::handleQueueJobFinished);
-    qjob->start();
-}
-
 MailClient::MailClient(ITIPHandlerComponentFactory *factory, QObject *parent)
     : QObject(parent)
     , mFactory(factory ? factory : new ITIPHandlerComponentFactory(this))
@@ -377,13 +51,11 @@
         return;
     }
 
-    MessageData msg;
-    msg.bccMe = bccMe;
-    msg.attachment = attachment;
-    msg.from = incidence->organizer().fullName();
-
+    const QString from = incidence->organizer().fullName();
     const QString organizerEmail = incidence->organizer().email();
 
+    QStringList toList;
+    QStringList ccList;
     const int numberOfAttendees = attendees.count();
     for (int i = 0; i < numberOfAttendees; ++i) {
         const KCalendarCore::Attendee a = attendees.at(i);
@@ -402,29 +74,37 @@
 
         // Optional Participants and Non-Participants are copied on the email
         if (a.role() == KCalendarCore::Attendee::OptParticipant || a.role() == KCalendarCore::Attendee::NonParticipant) {
-            msg.cc.push_back(a.email());
+            ccList << a.email();
         } else {
-            msg.to.push_back(a.email());
+            toList << a.email();
         }
     }
-    if (msg.cc.isEmpty() && msg.to.isEmpty()) {
+    if (toList.isEmpty() && ccList.isEmpty()) {
         // Not really to be called a groupware meeting, eh
         qCWarning(AKONADICALENDAR_LOG) << "There are really no attendees to e-mail";
         Q_EMIT finished(ResultReallyNoAttendees, i18n("There are no attendees to e-mail"));
         return;
     }
+    QString to;
+    if (!toList.isEmpty()) {
+        to = toList.join(QLatin1String(", "));
+    }
+    QString cc;
+    if (!ccList.isEmpty()) {
+        cc = ccList.join(QLatin1String(", "));
+    }
 
     QString subject;
     if (incidence->type() != KCalendarCore::Incidence::TypeFreeBusy) {
         KCalendarCore::Incidence::Ptr inc = incidence.staticCast<KCalendarCore::Incidence>();
-        msg.subject = inc->summary();
+        subject = inc->summary();
     } else {
-        msg.subject = i18n("Free Busy Object");
+        subject = i18n("Free Busy Object");
     }
 
-    msg.body = KCalUtils::IncidenceFormatter::mailBodyStr(incidence);
+    const QString body = KCalUtils::IncidenceFormatter::mailBodyStr(incidence);
 
-    send(incidence, identity, msg, mailTransport);
+    send(incidence, identity, from, to, cc, subject, body, false, bccMe, attachment, mailTransport);
 }
 
 void MailClient::mailOrganizer(const KCalendarCore::IncidenceBase::Ptr &incidence,
@@ -435,25 +115,21 @@
                                const QString &sub,
                                const QString &mailTransport)
 {
-    MessageData msg;
-    msg.from = from;
-    msg.to.push_back(incidence->organizer().fullName());
-    msg.bccMe = bccMe;
-    msg.subject = sub;
-    msg.attachment = attachment;
+    const QString to = incidence->organizer().fullName();
+    QString subject = sub;
 
     if (incidence->type() != KCalendarCore::Incidence::TypeFreeBusy) {
         KCalendarCore::Incidence::Ptr inc = incidence.staticCast<KCalendarCore::Incidence>();
-        if (msg.subject.isEmpty()) {
-            msg.subject = inc->summary();
+        if (subject.isEmpty()) {
+            subject = inc->summary();
         }
     } else {
-        msg.subject = i18n("Free Busy Message");
+        subject = i18n("Free Busy Message");
     }
 
-    msg.body = KCalUtils::IncidenceFormatter::mailBodyStr(incidence);
+    const QString body = KCalUtils::IncidenceFormatter::mailBodyStr(incidence);
 
-    send(incidence, identity, msg, mailTransport);
+    send(incidence, identity, from, to, QString(), subject, body, false, bccMe, attachment, mailTransport);
 }
 
 void MailClient::mailTo(const KCalendarCore::IncidenceBase::Ptr &incidence,
@@ -464,166 +140,60 @@
                         const QString &attachment,
                         const QString &mailTransport)
 {
-    MessageData msg;
-    msg.to = extractEmailAndNormalize(recipients);
-    msg.from = from;
-    msg.bccMe = bccMe;
-    msg.attachment = attachment;
+    QString subject;
 
     if (incidence->type() != KCalendarCore::Incidence::TypeFreeBusy) {
         KCalendarCore::Incidence::Ptr inc = incidence.staticCast<KCalendarCore::Incidence>();
-        msg.subject = inc->summary();
+        subject = inc->summary();
     } else {
-        msg.subject = i18n("Free Busy Message");
+        subject = i18n("Free Busy Message");
     }
 
-    msg.body = KCalUtils::IncidenceFormatter::mailBodyStr(incidence);
-
-    send(incidence, identity, msg, mailTransport);
-}
-
-void MailClient::populateComposer(MessageComposer::Composer *composer, const MessageData &msg)
-{
-    // gather config values
-    KConfig config(QStringLiteral("kmail2rc"));
-    KConfigGroup configGroup(&config, QStringLiteral("Invitations"));
-    const bool outlookConformInvitation = configGroup.readEntry("LegacyBodyInvites",
-#ifdef KDEPIM_ENTERPRISE_BUILD
-                                                                true
-#else
-                                                                false
-#endif
-    );
-
-    auto *globalPart = composer->globalPart();
-    globalPart->setGuiEnabled(false);
+    const QString body = KCalUtils::IncidenceFormatter::mailBodyStr(incidence);
 
-    auto *infoPart = composer->infoPart();
-    infoPart->setCc(msg.cc);
-    infoPart->setTo(msg.to);
-    infoPart->setFrom(msg.from);
-    if (msg.bccMe) {
-        infoPart->setBcc({msg.from});
-    }
-    infoPart->setSubject(msg.subject);
-
-    // Set User-Agent
-    auto *header = new KMime::Headers::Generic("User-Agent");
-    header->fromUnicodeString(QStringLiteral("KOrganizer %1").arg(QStringLiteral(AKONADI_CALENDAR_VERSION)), "utf-8");
-    KMime::Headers::Base::List extras;
-    extras.push_back(header);
-    infoPart->setExtraHeaders(extras);
-
-    auto *itipPart = composer->itipPart();
-    itipPart->setOutlookConformInvitation(outlookConformInvitation);
-    itipPart->setInvitationBody(msg.body);
-    itipPart->setInvitation(msg.attachment);
+    send(incidence, identity, from, recipients, QString(), subject, body, false, bccMe, attachment, mailTransport);
 }
 
-bool MailClient::addKeysToContext(const QString &gnupgHome,
-                                  const QVector<QPair<QStringList, std::vector<GpgME::Key>>> &data,
-                                  const std::map<QByteArray, QString> &autocryptMap)
+static QStringList extractEmailAndNormalize(const QString &email)
 {
-    bool needSpecialContext = false;
-
-    for (const auto &p : data) {
-        for (const auto &k : p.second) {
-            const auto it = autocryptMap.find(k.primaryFingerprint());
-            if (it != autocryptMap.end()) {
-                needSpecialContext = true;
-                break;
-            }
-        }
-        if (needSpecialContext) {
-            break;
-        }
-    }
-
-    if (!needSpecialContext) {
-        return false;
-    }
-    const QGpgME::Protocol *proto(QGpgME::openpgp());
-
-    const auto storage = MessageCore::AutocryptStorage::self();
-    QEventLoop loop;
-    int runningJobs = 0;
-    for (const auto &p : data) {
-        for (const auto &k : p.second) {
-            const auto it = autocryptMap.find(k.primaryFingerprint());
-            if (it == autocryptMap.end()) {
-                qCDebug(AKONADICALENDAR_LOG) << "Adding " << k.primaryFingerprint() << "via Export/Import";
-                auto exportJob = proto->publicKeyExportJob(false);
-                connect(exportJob,
-                        &QGpgME::ExportJob::result,
-                        [&gnupgHome, &proto, &runningJobs, &loop, &k](const GpgME::Error &result,
-                                                                      const QByteArray &keyData,
-                                                                      const QString &auditLogAsHtml,
-                                                                      const GpgME::Error &auditLogError) {
-                            Q_UNUSED(auditLogAsHtml);
-                            Q_UNUSED(auditLogError);
-                            if (result) {
-                                qCWarning(AKONADICALENDAR_LOG) << "Failed to export " << k.primaryFingerprint() << result.asString();
-                                --runningJobs;
-                                if (runningJobs < 1) {
-                                    loop.quit();
-                                }
-                            }
-
-                            auto importJob = proto->importJob();
-                            QGpgME::Job::context(importJob)->setEngineHomeDirectory(gnupgHome.toUtf8().constData());
-                            importJob->exec(keyData);
-                            importJob->deleteLater();
-                            --runningJobs;
-                            if (runningJobs < 1) {
-                                loop.quit();
-                            }
-                        });
-                QStringList patterns;
-                patterns << QString::fromUtf8(k.primaryFingerprint());
-                runningJobs++;
-                exportJob->start(patterns);
-                exportJob->setExportFlags(GpgME::Context::ExportMinimal);
-            } else {
-                qCDebug(AKONADICALENDAR_LOG) << "Adding " << k.primaryFingerprint() << "from Autocrypt storage";
-                const auto recipient = storage->getRecipient(it->second.toUtf8());
-                auto key = recipient->gpgKey();
-                auto keydata = recipient->gpgKeydata();
-                if (QByteArray(key.primaryFingerprint()) != QByteArray(k.primaryFingerprint())) {
-                    qCDebug(AKONADICALENDAR_LOG) << "Using gossipkey";
-                    keydata = recipient->gossipKeydata();
-                }
-                auto importJob = proto->importJob();
-                QGpgME::Job::context(importJob)->setEngineHomeDirectory(gnupgHome.toUtf8().constData());
-                const auto result = importJob->exec(keydata);
-                importJob->deleteLater();
-            }
-        }
+    const QStringList splittedEmail = KEmailAddress::splitAddressList(email);
+    QStringList normalizedEmail;
+    normalizedEmail.reserve(splittedEmail.count());
+    for (const QString &email : splittedEmail) {
+        const QString str = KEmailAddress::extractEmailAddress(KEmailAddress::normalizeAddressesAndEncodeIdn(email));
+        normalizedEmail << str;
     }
-    loop.exec();
-    return true;
+    return normalizedEmail;
 }
 
 void MailClient::send(const KCalendarCore::IncidenceBase::Ptr &incidence,
                       const KIdentityManagement::Identity &identity,
-                      const MessageData &_msg,
+                      const QString &from,
+                      const QString &_to,
+                      const QString &cc,
+                      const QString &subject,
+                      const QString &body,
+                      bool hidden,
+                      bool bccMe,
+                      const QString &attachment,
                       const QString &mailTransport)
 {
+    Q_UNUSED(hidden)
     if (!MailTransport::TransportManager::self()->showTransportCreationDialog(nullptr, MailTransport::TransportManager::IfNoTransportExists)) {
         qCritical() << "Error while creating transport";
         Q_EMIT finished(ResultErrorCreatingTransport, i18n("Error while creating transport"));
         return;
     }
 
-    MessageData msg = _msg;
-
     // We must have a recipients list for most MUAs. Thus, if the 'to' list
     // is empty simply use the 'from' address as the recipient.
-    if (msg.to.isEmpty()) {
-        msg.to.push_back(msg.from);
-    }
-    qCDebug(AKONADICALENDAR_LOG) << "\nFrom:" << msg.from << "\nTo:" << msg.to << "\nCC:" << msg.cc << "\nSubject:" << msg.subject << "\nBody: \n"
-                                 << msg.body << "\nAttachment:\n"
-                                 << msg.attachment << "\nmailTransport: " << mailTransport << "\nidentity:" << identity.identityName();
+    QString to = _to;
+    if (to.isEmpty()) {
+        to = from;
+    }
+    qCDebug(AKONADICALENDAR_LOG) << "\nFrom:" << from << "\nTo:" << to << "\nCC:" << cc << "\nSubject:" << subject << "\nBody: \n"
+                                 << body << "\nAttachment:\n"
+                                 << attachment << "\nmailTransport: " << mailTransport;
 
     MailTransport::Transport *transport = MailTransport::TransportManager::self()->transportByName(mailTransport);
     if (!transport) {
@@ -632,283 +202,145 @@
         return;
     }
 
-    auto composers = buildComposers(incidence, identity, msg);
-    for (auto &composerPtr : composers) {
-        populateComposer(composerPtr.get(), msg);
-        auto *composer = composerPtr.release();
-        QObject::connect(composer, &MessageComposer::Composer::result, this, [this, transport, composer, incidence, identity, msg]() {
-            for (const auto &message : composer->resultMessages()) {
-                queueMessage(transport, composer, incidence, identity, msg, message);
-            }
-            composer->deleteLater();
-        });
-        composer->start();
-    }
-}
+    const int transportId = transport->id();
 
-void MailClient::handleQueueJobFinished(KJob *job)
-{
-    if (job->error()) {
-        qCritical() << "Error queueing message:" << job->errorText();
-        Q_EMIT finished(ResultQueueJobError, i18n("Error queuing message in outbox: %1", job->errorText()));
-    } else {
-        Q_EMIT finished(ResultSuccess, QString());
-    }
-}
+    // gather config values
+    KConfig config(QStringLiteral("kmail2rc"));
 
-bool MailClient::determineWhetherToSign(bool doSignCompletely,
-                                        Kleo::KeyResolver *keyResolver,
-                                        ITIPHandlerDialogDelegate *dialogDelegate,
-                                        const KIdentityManagement::Identity &identity,
-                                        bool signSomething,
-                                        bool &signAttachments,
-                                        bool &result,
-                                        bool &canceled)
-{
-    bool sign = false;
-    switch (keyResolver->checkSigningPreferences(signSomething)) {
-    case Kleo::DoIt:
-        if (!signSomething) {
-            signAttachments = true;
-            return true;
-        }
-        sign = true;
-        break;
-    case Kleo::DontDoIt:
-        sign = false;
-        break;
-    case Kleo::AskOpportunistic:
-        assert(0);
-    case Kleo::Ask: {
-        // the user wants to be asked or has to be asked
-        const QString msg = i18n(
-            "Examination of the recipient's signing preferences "
-            "yielded that you be asked whether or not to sign "
-            "this message.\n"
-            "Sign this message?");
-        switch (dialogDelegate->warningTwoActionsCancel(msg, i18n("Sign Message?"), KGuiItem(i18nc("to sign", "&Sign")), KGuiItem(i18n("Do &Not Sign")))) {
-        case ITIPHandlerDialogDelegate::CancelAction:
-            result = false;
-            canceled = true;
-            return false;
-        case ITIPHandlerDialogDelegate::PrimaryAction:
-            signAttachments = true;
-            return true;
-        case ITIPHandlerDialogDelegate::SecondaryAction:
-            signAttachments = false;
-            return false;
-        default:
-            qCWarning(AKONADICALENDAR_LOG) << "Unhandled MessageBox response";
-            return false;
+    KConfigGroup configGroup(&config, QStringLiteral("Invitations"));
+    const bool outlookConformInvitation = configGroup.readEntry("LegacyBodyInvites",
+#ifdef KDEPIM_ENTERPRISE_BUILD
+                                                                true
+#else
+                                                                false
+#endif
+    );
+
+    // Now build the message we like to send. The message KMime::Message::Ptr instance
+    // will be the root message that has 2 additional message. The body itself and
+    // the attached cal.ics calendar file.
+    KMime::Message::Ptr message = KMime::Message::Ptr(new KMime::Message);
+    message->contentTransferEncoding()->clear(); // 7Bit, decoded.
+
+    // Set the headers
+
+    message->userAgent()->fromUnicodeString(KProtocolManager::userAgentForApplication(QStringLiteral("KOrganizer"), QStringLiteral(AKONADI_CALENDAR_VERSION)),
+                                            "utf-8");
+
+    message->from()->fromUnicodeString(from, "utf-8");
+    message->to()->fromUnicodeString(to, "utf-8");
+    message->cc()->fromUnicodeString(cc, "utf-8");
+    if (bccMe) {
+        message->bcc()->fromUnicodeString(from, "utf-8"); // from==me, right?
+    }
+    message->date()->setDateTime(QDateTime::currentDateTime());
+    message->subject()->fromUnicodeString(subject, "utf-8");
+
+    if (outlookConformInvitation) {
+        message->contentType()->setMimeType("text/calendar");
+        message->contentType()->setCharset("utf-8");
+        message->contentType()->setName(QStringLiteral("cal.ics"), "utf-8");
+        message->contentType()->setParameter(QStringLiteral("method"), QStringLiteral("request"));
+
+        if (!attachment.isEmpty()) {
+            auto disposition = new KMime::Headers::ContentDisposition;
+            disposition->setDisposition(KMime::Headers::CDinline);
+            message->setHeader(disposition);
+            message->contentTransferEncoding()->setEncoding(KMime::Headers::CEquPr);
+            message->setBody(KMime::CRLFtoLF(attachment.toUtf8()));
         }
-        break;
-    }
-    case Kleo::Conflict: {
-        // warn the user that there are conflicting signing preferences
-        const QString msg = i18n(
-            "There are conflicting signing preferences "
-            "for these recipients.\n"
-            "Sign this message?");
-        switch (dialogDelegate->warningTwoActionsCancel(msg, i18n("Sign Message?"), KGuiItem(i18nc("to sign", "&Sign")), KGuiItem(i18n("Do &Not Sign")))) {
-        case ITIPHandlerDialogDelegate::CancelAction:
-            result = false;
-            canceled = true;
-            return false;
-        case ITIPHandlerDialogDelegate::PrimaryAction:
-            signAttachments = true;
-            return true;
-        case ITIPHandlerDialogDelegate::SecondaryAction:
-            signAttachments = false;
-            return false;
-        default:
-            qCWarning(AKONADICALENDAR_LOG) << "Unhandled MessageBox response";
-            return false;
+    } else {
+        // We need to set following 4 lines by hand else KMime::Content::addContent
+        // will create a new Content instance for us to attach the main message
+        // what we don't need cause we already have the main message instance where
+        // 2 additional messages are attached.
+        KMime::Headers::ContentType *ct = message->contentType();
+        ct->setMimeType("multipart/mixed");
+        ct->setBoundary(KMime::multiPartBoundary());
+        ct->setCategory(KMime::Headers::CCcontainer);
+
+        // Set the first multipart, the body message.
+        auto bodyMessage = new KMime::Content;
+        auto bodyDisposition = new KMime::Headers::ContentDisposition;
+        bodyDisposition->setDisposition(KMime::Headers::CDinline);
+        bodyMessage->contentType()->setMimeType("text/plain");
+        bodyMessage->contentType()->setCharset("utf-8");
+        bodyMessage->contentTransferEncoding()->setEncoding(KMime::Headers::CEquPr);
+        bodyMessage->setBody(KMime::CRLFtoLF(body.toUtf8()));
+        bodyMessage->setHeader(bodyDisposition);
+        message->addContent(bodyMessage);
+
+        // Set the second multipart, the attachment.
+        if (!attachment.isEmpty()) {
+            auto attachMessage = new KMime::Content;
+            auto attachDisposition = new KMime::Headers::ContentDisposition;
+            attachDisposition->setDisposition(KMime::Headers::CDattachment);
+            attachMessage->contentType()->setMimeType("text/calendar");
+            attachMessage->contentType()->setCharset("utf-8");
+            attachMessage->contentType()->setName(QStringLiteral("cal.ics"), "utf-8");
+            attachMessage->contentType()->setParameter(QStringLiteral("method"), QStringLiteral("request"));
+            attachMessage->setHeader(attachDisposition);
+            attachMessage->contentTransferEncoding()->setEncoding(KMime::Headers::CEquPr);
+            attachMessage->setBody(KMime::CRLFtoLF(attachment.toUtf8()));
+            message->addContent(attachMessage);
         }
-        break;
     }
-    case Kleo::Impossible: {
-        const QString msg = i18n(
-            "You have requested to sign this message, "
-            "but no valid signing keys have been configured "
-            "for this identity.");
-        if (dialogDelegate->warningContinueCancel(msg, i18n("Send Unsigned?"), KGuiItem(i18n("Send &Unsigned"))) == KMessageBox::Cancel) {
-            result = false;
-            return false;
+
+    // Job done, attach the both multiparts and assemble the message.
+    message->assemble();
+
+    // Put the newly created item in the MessageQueueJob.
+    Akonadi::MessageQueueJob *qjob = mFactory->createMessageQueueJob(incidence, identity, this);
+
+    if (identity.disabledFcc()) {
+        qjob->sentBehaviourAttribute().setSentBehaviour(Akonadi::SentBehaviourAttribute::Delete);
+    } else {
+        const Akonadi::Collection sentCollection(identity.fcc().toLongLong());
+        if (sentCollection.isValid()) {
+            qjob->sentBehaviourAttribute().setSentBehaviour(Akonadi::SentBehaviourAttribute::MoveToCollection);
+            qjob->sentBehaviourAttribute().setMoveToCollection(sentCollection);
         } else {
-            signAttachments = false;
-            return false;
+            qjob->sentBehaviourAttribute().setSentBehaviour(Akonadi::SentBehaviourAttribute::MoveToDefaultSentCollection);
         }
     }
-    }
+    qjob->transportAttribute().setTransportId(transportId);
 
-    if (!sign || !doSignCompletely) {
-        if (cryptoWarningUnsigned(identity)) {
-            const QString msg = sign && !doSignCompletely ? i18n(
-                                    "Some parts of this message will not be signed.\n"
-                                    "Sending only partially signed messages might violate site policy.\n"
-                                    "Sign all parts instead?") // oh, I hate this...
-                                                          : i18n(
-                                                              "This message will not be signed.\n"
-                                                              "Sending unsigned message might violate site policy.\n"
-                                                              "Sign message instead?"); // oh, I hate this...
-            const QString buttonText = sign && !doSignCompletely ? i18n("&Sign All Parts") : i18n("&Sign");
-            switch (dialogDelegate->warningTwoActionsCancel(msg, i18n("Unsigned-Message Warning"), KGuiItem(buttonText), KGuiItem(i18n("Send &As Is")))) {
-            case ITIPHandlerDialogDelegate::CancelAction:
-                result = false;
-                canceled = true;
-                return false;
-            case ITIPHandlerDialogDelegate::PrimaryAction:
-                signAttachments = true;
-                return true;
-            case ITIPHandlerDialogDelegate::SecondaryAction:
-                return sign || doSignCompletely;
-            default:
-                qCWarning(AKONADICALENDAR_LOG) << "Unhandled MessageBox response";
-                return false;
-            }
-        }
-    }
-    return sign || doSignCompletely;
-}
+    const QString unormalizedFrom = (transport && transport->specifySenderOverwriteAddress()) ? transport->senderOverwriteAddress() : from;
 
-bool MailClient::determineWhetherToEncrypt(bool doEncryptCompletely,
-                                           Kleo::KeyResolver *keyResolver,
-                                           ITIPHandlerDialogDelegate *dialogDelegate,
-                                           const KIdentityManagement::Identity &identity,
-                                           bool encryptSomething,
-                                           bool signSomething,
-                                           bool &encryptAttachments,
-                                           bool &result,
-                                           bool &canceled)
-{
-    bool encrypt = false;
-    bool opportunistic = false;
+    const QString normalizedFrom = KEmailAddress::extractEmailAddress(KEmailAddress::normalizeAddressesAndEncodeIdn(unormalizedFrom));
 
-    const auto encryptionPrefs = keyResolver->checkEncryptionPreferences(encryptSomething);
-    qDebug() << "DetermineWhetherToEncrypt:" << encryptionPrefs;
+    const QString finalFrom = KEmailAddress::extractEmailAddress(normalizedFrom);
+    qjob->addressAttribute().setFrom(finalFrom);
 
-    switch (encryptionPrefs) {
-    case Kleo::DoIt:
-        if (!encryptSomething) {
-            encryptAttachments = true;
-            return true;
-        }
-        encrypt = true;
-        break;
-    case Kleo::DontDoIt:
-        encrypt = false;
-        break;
-    case Kleo::AskOpportunistic:
-        opportunistic = true;
-        // fall through...
-        Q_FALLTHROUGH();
-    case Kleo::Ask: {
-        // the user wants to be asked or has to be asked
-        const QString msg = opportunistic ? i18n(
-                                "Valid trusted encryption keys were found for all recipients.\n"
-                                "Encrypt this message?")
-                                          : i18n(
-                                              "Examination of the recipient's encryption preferences "
-                                              "yielded that you be asked whether or not to encrypt "
-                                              "this message.\n"
-                                              "Encrypt this message?");
-        switch (dialogDelegate->warningTwoActionsCancel(msg,
-                                                        i18n("Encrypt Message?"),
-                                                        KGuiItem(signSomething ? i18n("Sign && &Encrypt") : i18n("&Encrypt")),
-                                                        KGuiItem(signSomething ? i18n("&Sign Only") : i18n("&Send As-Is")))) {
-        case ITIPHandlerDialogDelegate::CancelAction:
-            result = false;
-            canceled = true;
-            return false;
-        case ITIPHandlerDialogDelegate::PrimaryAction:
-            encryptAttachments = true;
-            return true;
-        case ITIPHandlerDialogDelegate::SecondaryAction:
-            encryptAttachments = false;
-            return false;
-        default:
-            qCWarning(AKONADICALENDAR_LOG) << "Unhandled MessageBox response";
-            return false;
-        }
-        break;
-    }
-    case Kleo::Conflict: {
-        // warn the user that there are conflicting encryption preferences
-        const QString msg = i18n(
-            "There are conflicting encryption preferences "
-            "for these recipients.\n"
-            "Encrypt this message?");
-        switch (dialogDelegate->warningTwoActionsCancel(msg, i18n("Encrypt Message?"), KGuiItem(i18n("&Encrypt")), KGuiItem(i18n("Do &Not Encrypt")))) {
-        case ITIPHandlerDialogDelegate::CancelAction:
-            result = false;
-            canceled = true;
-            return false;
-        case ITIPHandlerDialogDelegate::PrimaryAction:
-            encryptAttachments = true;
-            return true;
-        case ITIPHandlerDialogDelegate::SecondaryAction:
-            encryptAttachments = false;
-            return false;
-        default:
-            qCWarning(AKONADICALENDAR_LOG) << "Unhandled MessageBox response";
-            return false;
-        }
-        break;
-    }
-    case Kleo::Impossible: {
-        const QString msg = i18n(
-            "You have requested to encrypt this message, "
-            "and to encrypt a copy to yourself, "
-            "but no valid trusted encryption keys have been "
-            "configured for this identity.");
-        if (dialogDelegate->warningContinueCancel(msg, i18n("Send Unencrypted?"), KGuiItem(i18n("Send &Unencrypted")))
-            == ITIPHandlerDialogDelegate::CancelAction) {
-            result = false;
-            return false;
-        } else {
-            encryptAttachments = false;
-            return false;
-        }
+    QStringList toStringList;
+    if (!to.isEmpty()) {
+        toStringList = extractEmailAndNormalize(to);
+        qjob->addressAttribute().setTo(toStringList);
     }
+
+    QStringList ccStringList;
+    if (!cc.isEmpty()) {
+        ccStringList = extractEmailAndNormalize(cc);
+        qjob->addressAttribute().setCc(ccStringList);
     }
 
-    if (!encrypt || !doEncryptCompletely) {
-        if (cryptoWarningUnencrypted(identity)) {
-            const QString msg = !doEncryptCompletely ? i18n(
-                                    "Some parts of this message will not be encrypted.\n"
-                                    "Sending only partially encrypted messages might violate "
-                                    "site policy and/or leak sensitive information.\n"
-                                    "Encrypt all parts instead?") // oh, I hate this...
-                                                     : i18n(
-                                                         "This message will not be encrypted.\n"
-                                                         "Sending unencrypted messages might violate site policy and/or "
-                                                         "leak sensitive information.\n"
-                                                         "Encrypt messages instead?"); // oh, I hate this...
-            const QString buttonText = !doEncryptCompletely ? i18n("&Encrypt All Parts") : i18n("&Encrypt");
-            switch (dialogDelegate->warningTwoActionsCancel(msg,
-                                                            i18n("Unencrypted Message Warning"),
-                                                            KGuiItem(buttonText),
-                                                            KGuiItem(signSomething ? i18n("&Sign Only") : i18n("&Send As-Is")))) {
-            case ITIPHandlerDialogDelegate::CancelAction:
-                result = false;
-                canceled = true;
-                return false;
-            case ITIPHandlerDialogDelegate::PrimaryAction:
-                encryptAttachments = true;
-                return true;
-            case ITIPHandlerDialogDelegate::SecondaryAction:
-                return encrypt || doEncryptCompletely;
-            default:
-                qCWarning(AKONADICALENDAR_LOG) << "Unhandled MessageBox response";
-                return false;
-            }
-        }
+    QStringList bccStringList;
+    if (bccMe) {
+        bccStringList = extractEmailAndNormalize(from);
+        qjob->addressAttribute().setBcc(bccStringList);
     }
 
-    return encrypt || doEncryptCompletely;
+    qjob->setMessage(message);
+    connect(qjob, &KJob::finished, this, &MailClient::handleQueueJobFinished);
+    qjob->start();
 }
 
-bool MailClient::showKeyApprovalDialog() const
+void MailClient::handleQueueJobFinished(KJob *job)
 {
-    return MessageComposer::MessageComposerSettings::self()->cryptoShowKeysForApproval();
+    if (job->error()) {
+        qCritical() << "Error queueing message:" << job->errorText();
+        Q_EMIT finished(ResultQueueJobError, i18n("Error queuing message in outbox: %1", job->errorText()));
+    } else {
+        Q_EMIT finished(ResultSuccess, QString());
+    }
 }
diff -ruN akonadi-calendar-23.08.4.orig/src/mailclient_p.h akonadi-calendar-23.08.4/src/mailclient_p.h
--- akonadi-calendar-23.08.4.orig/src/mailclient_p.h	2023-11-22 20:09:08.609106058 +0100
+++ akonadi-calendar-23.08.4/src/mailclient_p.h	2023-11-22 20:09:11.900759398 +0100
@@ -14,8 +14,6 @@
 #include <KMime/KMimeMessage>
 #include <QObject>
 
-#include <optional>
-
 struct UnitTestResult {
     using List = QVector<UnitTestResult>;
     QString from;
@@ -35,27 +33,6 @@
 class Identity;
 }
 
-namespace Kleo
-{
-class KeyResolver;
-}
-
-namespace MessageComposer
-{
-class Composer;
-class ContactPreference;
-}
-
-namespace MailTransport
-{
-class Transport;
-}
-
-namespace GpgME
-{
-class Key;
-}
-
 class KJob;
 
 namespace Akonadi
@@ -65,20 +42,6 @@
 class AKONADI_CALENDAR_TESTS_EXPORT MailClient : public QObject
 {
     Q_OBJECT
-
-    struct MessageData {
-        QString from;
-        QStringList to;
-        QStringList cc;
-        QString subject;
-        QString body;
-        bool hidden = false;
-        bool bccMe = false;
-        QString attachment;
-    };
-
-    bool mAkonadiLookupEnabled = true;
-
 public:
     enum Result { ResultSuccess, ResultNoAttendees, ResultReallyNoAttendees, ResultErrorCreatingTransport, ResultErrorFetchingTransport, ResultQueueJobError };
 
@@ -127,7 +90,14 @@
     */
     void send(const KCalendarCore::IncidenceBase::Ptr &incidence,
               const KIdentityManagement::Identity &identity,
-              const MessageData &msg,
+              const QString &from,
+              const QString &to,
+              const QString &cc,
+              const QString &subject,
+              const QString &body,
+              bool hidden = false,
+              bool bccMe = false,
+              const QString &attachment = QString(),
               const QString &mailTransport = QString());
 
 private:
@@ -139,53 +109,6 @@
 public:
     // For unit-test usage, since we can't depend on kdepim-runtime on jenkins
     ITIPHandlerComponentFactory *mFactory = nullptr;
-
-protected:
-    /** Allows to disable Akonadi lookup in KeyResolver (for tests) */
-    void setAkonadiLookupEnabled(bool enabled);
-    /** Allows to override KeyResolver contact preferences (useful for tests) */
-    virtual std::optional<MessageComposer::ContactPreference> contactPreference(const QString &email);
-
-    /** Whether to show key approval dialog or not. **/
-    virtual bool showKeyApprovalDialog() const;
-
-private:
-    std::vector<std::unique_ptr<MessageComposer::Composer>>
-    buildComposers(const KCalendarCore::IncidenceBase::Ptr &incidence, const KIdentityManagement::Identity &identity, const MessageData &msg);
-
-    void populateComposer(MessageComposer::Composer *composer, const MessageData &msg);
-
-    bool determineWhetherToSign(bool doSignCompletely,
-                                Kleo::KeyResolver *keyResolver,
-                                ITIPHandlerDialogDelegate *dialogDelegate,
-                                const KIdentityManagement::Identity &identity,
-                                bool signSomething,
-                                bool &signAttachments,
-                                bool &result,
-                                bool &canceled);
-
-    bool determineWhetherToEncrypt(bool doEncryptCompletely,
-                                   Kleo::KeyResolver *keyResolver,
-                                   ITIPHandlerDialogDelegate *dialogDelegate,
-                                   const KIdentityManagement::Identity &identity,
-                                   bool encryptSomething,
-                                   bool signSomething,
-                                   bool &encryptAttachments,
-                                   bool &result,
-                                   bool &canceled);
-
-    bool addKeysToContext(const QString &gnupgHome,
-                          const QVector<QPair<QStringList, std::vector<GpgME::Key>>> &data,
-                          const std::map<QByteArray, QString> &autocrypt);
-
-    void queueMessage(const MailTransport::Transport *transport,
-                      const MessageComposer::Composer *composer,
-                      const KCalendarCore::IncidenceBase::Ptr &incidence,
-                      const KIdentityManagement::Identity &identity,
-                      const MessageData &msg,
-                      const KMime::Message::Ptr &message);
-
-    void populateKeyResolverContactsPreferences(Kleo::KeyResolver &keyResolver, const QStringList &addresses);
 };
 }
 
--- akonadi-calendar-23.08.4/CMakeLists.txt.orig	2023-12-05 04:07:10.000000000 +0100
+++ akonadi-calendar-23.08.4/CMakeLists.txt	2024-01-05 15:47:28.707095688 +0100
@@ -51,9 +51,6 @@
 set(MAILTRANSPORT_LIB_VERSION "5.24.4")
 set(CALENDARUTILS_LIB_VERSION "5.24.4")
 set(IDENTITYMANAGEMENT_LIB_VERSION "5.24.4")
-set(MESSAGECORE_LIB_VERSION "5.24.4")
-set(MESSAGECOMPOSER_LIB_VERSION "5.24.4")
-set(LIBKLEO_LIB_VERSION "5.24.4")
 
 ecm_setup_version(PROJECT VARIABLE_PREFIX AKONADICALENDAR
                         VERSION_HEADER "${CMAKE_CURRENT_BINARY_DIR}/akonadi-calendar_version.h"
@@ -84,9 +81,6 @@
 find_package(KPim${KF_MAJOR_VERSION}MailTransport ${MAILTRANSPORT_LIB_VERSION} CONFIG REQUIRED)
 find_package(KPim${KF_MAJOR_VERSION}IdentityManagement ${IDENTITYMANAGEMENT_LIB_VERSION} CONFIG REQUIRED)
 find_package(KPim${KF_MAJOR_VERSION}CalendarUtils ${CALENDARUTILS_LIB_VERSION} CONFIG REQUIRED)
-find_package(KPim${KF_MAJOR_VERSION}MessageCore ${MESSAGECORE_LIB_VERSION} CONFIG REQUIRED)
-find_package(KPim${KF_MAJOR_VERSION}MessageComposer ${MESSAGECOMPOSER_LIB_VERSION} CONFIG REQUIRED)
-find_package(KPim${KF_MAJOR_VERSION}Libkleo ${LIBKLEO_LIB_VERSION} CONFIG REQUIRED)
 
 find_package(KPim${KF_MAJOR_VERSION}Akonadi ${AKONADI_LIB_VERSION} CONFIG REQUIRED)
 find_package(KPim${KF_MAJOR_VERSION}AkonadiContact ${AKONADICONTACT_LIB_VERSION} CONFIG REQUIRED)

# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
# Maintainer:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: valgrind requires rebuilt with each major glibc version

pkgname=glibc
pkgver=2.33
pkgrel=6
arch=(powerpc64le powerpc)
groups=(base)
url='https://www.gnu.org/software/libc'
pkgdesc='GNU C Library'
license=(GPL LGPL)
depends=('linux-api-headers>=5.10' tzdata filesystem)
makedepends=(git gd python)
optdepends=('perl: for mtrace')
conflicts=(systemtap)
provides=(systemtap)
options=(!strip staticlibs)
docker_priv=1
#_commit=18fdba553dd9b907e9812b90d2cea593f776058f
#source=(git+https://sourceware.org/git/glibc.git#commit=$_commit
source=(https://ftp.gnu.org/gnu/glibc/glibc-$pkgver.tar.xz{,.sig}
	locale.gen.txt
	locale-gen
        sdt-config.h
        sdt.h
        bz27343.patch
        bz27389.patch
        local-powerpc8xx-dcbz.diff
        power9-optimize-llogb.patch
        Add-C.UTF-8-locale.patch
        Revert-sysdeps-posix-getaddrinfo.c-gaih_inet-Only-us.patch)
validpgpkeys=(7273542B39962DF7B299931416792B4EA25340F8 # Carlos O'Donell
              BC7C7372637EC10C57D7AA6579C43DFBF1CF2187) # Siddhesh Poyarekar
sha256sums=('2e2556000e105dbd57f0b6b2a32ff2cf173bde4f0d85dffccfd8b7e51a0677ff'
            'SKIP'
            'd42648cea552ba5353a32e264686e992263289d5cc86207314dffc54ab514981'
            '83f108f915863c7ed0338e2d3e8f2e071a531a090ef8f8b2eb3a956a3c4f04d7'
            'cdc234959c6fdb43f000d3bb7d1080b0103f4080f5e67bcfe8ae1aaf477812f0'
            '774061aff612a377714a509918a9e0e0aafce708b87d2d7e06b1bd1f6542fe70'
            '5208656942ae4f1a0833a902d3ad09ea9f66422f8673613bea4f6c60749d9b6b'
            '9384cf17f50e6b11431a7f8c01b72e7678faa548a617bd6bd7cc8876ff6aca78'
            'b379cd1657942a176e31884cfd85fb78bbcd388b4a79bd46682e6f19c6366ff9'
            'd9e653179a1ec16d32f0d5589505986469fc26e3263263e9bef6e426f48b9d7f'
            '69aaac9e1940131348b804bde15e7ccfa7230dcd0c2e1c7c44ca93f7e3f1c6c7'
            '44e77b0e01b3aaeef6e16c5171be6e834b56f5283041af0f223c2b8785a2b6cd')
optdepends=('gd: for memusagestat')
install=glibc.install
backup=(etc/gai.conf
        etc/locale.gen
        etc/nscd.conf)
groups=(base)

prepare() {
  mkdir -p glibc-build lib32-glibc-build

  [[ -d glibc-$pkgver ]] && ln -s glibc-$pkgver glibc 
  cd glibc

  # commit c3479fb7939898ec22c655c383454d6e8b982a67
  patch -p1 -i "$srcdir"/bz27343.patch

  patch -p1 -i "$srcdir"/bz27389.patch

  patch -p1 -i "$srcdir"/local-powerpc8xx-dcbz.diff
  patch -p1 -i "$srcdir"/power9-optimize-llogb.patch
  patch -p1 -i "$srcdir"/Add-C.UTF-8-locale.patch
  patch -p1 -i "$srcdir"/Revert-sysdeps-posix-getaddrinfo.c-gaih_inet-Only-us.patch
}

build() {
  case ${CARCH} in
    powerpc|powerpc64le)
      CFLAGS="-O3 -fno-tree-vectorize"
      CXXFLAGS="-O3 -fno-tree-vectorize"
      ;;
  esac


  local _configure_flags=(
        --host=$CHOST
	--build=$CHOST
	--target=$CHOST
        --prefix=/usr
	--enable-add-ons
	--enable-lock-elision
	--enable-bind-now
	--enable-stackguard-randomization
	--enable-stack-protector=strong
	--with-pkgversion="ArchPOWER GLIBC ${pkgver}"
	--with-headers=/usr/include
	--disable-multi-arch
	--enable-systemtap
	--disable-profile
	--enable-kernel=4.4
	--disable-werror ${CPU}
  )

  cd "$srcdir/glibc-build"

  echo "slibdir=/usr/lib" >> configparms
  echo "rtlddir=/usr/lib" >> configparms
  echo "sbindir=/usr/bin" >> configparms
  echo "rootsbindir=/usr/bin" >> configparms

  # remove fortify for building libraries
  CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

  CFLAGS=${CFLAGS/-fno-plt/}
  CXXFLAGS=${CXXFLAGS/-fno-plt/}
  LDFLAGS=${LDFLAGS/,-z,now/}

  "$srcdir/glibc/configure" \
      --libdir=/usr/lib \
      --libexecdir=/usr/lib \
      --enable-cet \
      ${_configure_flags[@]}

  # build libraries with fortify disabled
  echo "build-programs=no" >> configparms
  make

  # re-enable fortify for programs
  sed -i "/build-programs=/s#no#yes#" configparms

  echo "CC += -D_FORTIFY_SOURCE=2" >> configparms
  echo "CXX += -D_FORTIFY_SOURCE=2" >> configparms
  make
}

check() {
  cd glibc-build

  # remove fortify in preparation to run test-suite
  sed -i '/FORTIFY/d' configparms

  # some failures are "expected"
  make check || true
}

package() {
  install -dm755 "$pkgdir/etc"
  touch "$pkgdir/etc/ld.so.conf"

  make -C glibc-build install_root="$pkgdir" install
  rm -f "$pkgdir"/etc/ld.so.{cache,conf}

  # Shipped in tzdata
  rm -f "$pkgdir"/usr/bin/{tzselect,zdump,zic}

  cd glibc

  install -dm755 "$pkgdir"/usr/lib/{locale,systemd/system,tmpfiles.d}
  install -m644 nscd/nscd.conf "$pkgdir/etc/nscd.conf"
  install -m644 nscd/nscd.service "$pkgdir/usr/lib/systemd/system"
  install -m644 nscd/nscd.tmpfiles "$pkgdir/usr/lib/tmpfiles.d/nscd.conf"
  install -dm755 "$pkgdir/var/db/nscd"

  install -m644 posix/gai.conf "$pkgdir"/etc/gai.conf

  install -m755 "$srcdir/locale-gen" "$pkgdir/usr/bin"

  # Create /etc/locale.gen
  install -m644 "$srcdir/locale.gen.txt" "$pkgdir/etc/locale.gen"
  sed -e '1,3d' -e 's|/| |g' -e 's|\\| |g' -e 's|^|#|g' \
    "$srcdir/glibc/localedata/SUPPORTED" >> "$pkgdir/etc/locale.gen"

  if check_option 'debug' n; then
    find "$pkgdir"/usr/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true
    find "$pkgdir"/usr/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true

    # Do not strip these for gdb and valgrind functionality, but strip the rest
    find "$pkgdir"/usr/lib \
      -not -name 'ld-*.so' \
      -not -name 'libc-*.so' \
      -not -name 'libpthread-*.so' \
      -not -name 'libthread_db-*.so' \
      -name '*-*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true
  fi

  # Provide tracing probes to libstdc++ for exceptions, possibly for other
  # libraries too. Useful for gdb's catch command.
  install -Dm644 "$srcdir/sdt.h" "$pkgdir/usr/include/sys/sdt.h"
  install -Dm644 "$srcdir/sdt-config.h" "$pkgdir/usr/include/sys/sdt-config.h"

  # Provided by libxcrypt; keep the old shared library for backwards compatibility
  rm -f "$pkgdir"/usr/include/crypt.h "$pkgdir"/usr/lib/libcrypt.{a,so*}
}

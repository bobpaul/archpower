# POWER Maintainer: Alexander Baldeck <alex.bldck@gmail.com>
#Maintainer : Sven-Hendrik Haase <svenstaro@archlinux.org>
pkgname=openvdb
pkgver=9.1.0
pkgrel=2
pkgdesc='A large suite of tools for the efficient storage and manipulation of sparse volumetric data discretized on three-dimensional grids'
url='https://github.com/dreamworksanimation/openvdb'
arch=(x86_64 powerpc64le powerpc riscv64)
license=('MPL')
depends=('boost-libs' 'tbb' 'zlib' 'jemalloc' 'blosc' 'log4cplus')
makedepends=('doxygen' 'boost' 'cmake' 'mesa' 'cppunit' 'glfw-x11' 'glu' 'python' 'python-numpy' 'ninja' 'texlive-core')
optdepends=('glfw: for tools'
            'glu: for tools'
            'python-numpy: python module')
source=("$pkgname-$pkgver.tar.gz::https://github.com/dreamworksanimation/openvdb/archive/v${pkgver}.tar.gz")
sha512sums=('434be61b03efec5d0022594d81064dce5f67595c1e34934d79e13627e573d2819bf947ca5b433fdca134642975b83eda71b46cf802f57e135d1611dbe2e5757e')

build() {
  cd "${srcdir}/${pkgname}-${pkgver}"
  case "${CARCH}" in
    powerpc|riscv64) CXXFLAGS+=' -latomic' ;;
  esac

  # if we have less than 24GB RAM, we can't do -j2 even
  ram=$(free --giga -t | tail -n1 | awk '{print $2}')
  if [ ${ram} -lt 16 ]; then
    export MAKEFLAGS="-j1"
    export NINJAFLAGS="-j1"
  fi

  cmake \
    -Bbuild \
    -GNinja \
    -DUSE_NUMPY=ON \
    -DUSE_LOG4CPLUS=ON \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DOPENVDB_BUILD_PYTHON_MODULE=ON \
    -DOPENVDB_BUILD_DOCS=ON \
    -DOPENVDB_BUILD_UNITTESTS=OFF

  ninja ${NINJAFLAGS} -C build
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}/build"

  DESTDIR="${pkgdir}" ninja install
  # Try to workaround FS#72653 for now
  mkdir -p "${pkgdir}"/usr/share/cmake/Modules/
  ln -s /usr/lib/cmake/OpenVDB/{OpenVDBUtils,FindOpenVDB,FindBlosc}.cmake "${pkgdir}"/usr/share/cmake/Modules/
}

# vim:set sw=2 sts=2 et:
